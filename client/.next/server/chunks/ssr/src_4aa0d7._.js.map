{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,uWAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,+YAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,uWAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,uWAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,uWAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,uWAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,uWAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,uWAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,uWAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,+YAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,uWAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,+YAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,uWAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,uWAAM,UAAU,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+YAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/app/registration/page.tsx"],"sourcesContent":["\"use client\"\r\nimport { useState } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\r\n\r\nconst UserRegistration = ({ contract, account }) => {\r\n  const [address, setAddress] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const registerUser = async () => {\r\n    if (!contract || !account) {\r\n      setStatus('Please connect your wallet first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setStatus('Registering user...');\r\n      \r\n      // Use the connected account if no address is provided\r\n      const targetAddress = address || account;\r\n      \r\n      const result = await contract.methods\r\n        .registerUser(targetAddress, role)\r\n        .send({ from: account });\r\n      \r\n      setStatus(`Successfully registered address ${targetAddress} as ${role}`);\r\n      setAddress('');\r\n      setRole('');\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setStatus(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-6\">\r\n      <CardHeader>\r\n        <CardTitle>User Registration</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <Input\r\n          placeholder=\"Address (leave empty to use connected wallet)\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n        />\r\n        <Select onValueChange={setRole} value={role}>\r\n          <SelectTrigger>\r\n            <SelectValue placeholder=\"Select role\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"FARMER\">Farmer</SelectItem>\r\n            <SelectItem value=\"COLLECTOR\">Collector</SelectItem>\r\n            <SelectItem value=\"TRANSPORTER\">Transporter</SelectItem>\r\n            <SelectItem value=\"DISTRIBUTOR\">Distributor</SelectItem>\r\n            <SelectItem value=\"RETAILER\">Retailer</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n        <Button onClick={registerUser}>Register User</Button>\r\n        {status && (\r\n          <Alert>\r\n            <AlertDescription>{status}</AlertDescription>\r\n          </Alert>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;AAQA,MAAM,mBAAmB,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,eAAe;QACnB,IAAI,CAAC,YAAY,CAAC,SAAS;YACzB,UAAU;YACV;QACF;QAEA,IAAI;YACF,UAAU;YAEV,sDAAsD;YACtD,MAAM,gBAAgB,WAAW;YAEjC,MAAM,SAAS,MAAM,SAAS,OAAO,CAClC,YAAY,CAAC,eAAe,MAC5B,IAAI,CAAC;gBAAE,MAAM;YAAQ;YAExB,UAAU,CAAC,gCAAgC,EAAE,cAAc,IAAI,EAAE,MAAM;YACvE,WAAW;YACX,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,UAAU,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;QACrC;IACF;IAEA,qBACE,+YAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,+YAAC,gIAAA,CAAA,aAAU;0BACT,cAAA,+YAAC,gIAAA,CAAA,YAAS;8BAAC;;;;;;;;;;;0BAEb,+YAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,+YAAC,iIAAA,CAAA,QAAK;wBACJ,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE5C,+YAAC,kIAAA,CAAA,SAAM;wBAAC,eAAe;wBAAS,OAAO;;0CACrC,+YAAC,kIAAA,CAAA,gBAAa;0CACZ,cAAA,+YAAC,kIAAA,CAAA,cAAW;oCAAC,aAAY;;;;;;;;;;;0CAE3B,+YAAC,kIAAA,CAAA,gBAAa;;kDACZ,+YAAC,kIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAS;;;;;;kDAC3B,+YAAC,kIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAY;;;;;;kDAC9B,+YAAC,kIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAc;;;;;;kDAChC,+YAAC,kIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAc;;;;;;kDAChC,+YAAC,kIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAW;;;;;;;;;;;;;;;;;;kCAGjC,+YAAC,kIAAA,CAAA,SAAM;wBAAC,SAAS;kCAAc;;;;;;oBAC9B,wBACC,+YAAC,iIAAA,CAAA,QAAK;kCACJ,cAAA,+YAAC,iIAAA,CAAA,mBAAgB;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAM/B;uCAEe"}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/app/transaction-history/page.tsx"],"sourcesContent":["\"use client\"\r\nimport React, { useState } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { AlertCircle, CheckCircle2 } from \"lucide-react\";\r\n\r\nconst TransactionHistory = ({ web3, contract, account }) => {\r\n  const [productId, setProductId] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchTransactionHistory = async () => {\r\n    if (!contract || !productId) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      // Get product details\r\n      const product = await contract.methods.getProduct(productId).call();\r\n      \r\n      // Fetch all events for this product\r\n      const events = await contract.getPastEvents('allEvents', {\r\n        fromBlock: 0,\r\n        toBlock: 'latest',\r\n        filter: { productId: productId }\r\n      });\r\n\r\n      // Get transaction details for each event\r\n      const historyWithDetails = await Promise.all(events.map(async (event) => {\r\n        const tx = await web3.eth.getTransaction(event.transactionHash);\r\n        const receipt = await web3.eth.getTransactionReceipt(event.transactionHash);\r\n        const block = await web3.eth.getBlock(event.blockNumber);\r\n        \r\n        return {\r\n          event: event.event,\r\n          transactionHash: event.transactionHash,\r\n          from: tx.from,\r\n          gasUsed: receipt.gasUsed,\r\n          gasPrice: tx.gasPrice,\r\n          timestamp: new Date(Number(block.timestamp) * 1000).toLocaleString(),\r\n          blockNumber: event.blockNumber,\r\n          cost: web3.utils.fromWei(\r\n            (BigInt(receipt.gasUsed) * BigInt(tx.gasPrice)).toString(),\r\n            'ether'\r\n          )\r\n        };\r\n      }));\r\n\r\n      setHistory(historyWithDetails);\r\n    } catch (error) {\r\n      console.error(\"Error fetching history:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-6\">\r\n      <CardHeader>\r\n        <CardTitle>Transaction History</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"flex gap-4\">\r\n          <Input\r\n            placeholder=\"Enter Product ID\"\r\n            value={productId}\r\n            onChange={(e) => setProductId(e.target.value)}\r\n          />\r\n          <Button \r\n            onClick={fetchTransactionHistory}\r\n            disabled={loading}\r\n          >\r\n            View History\r\n          </Button>\r\n        </div>\r\n\r\n        {loading && <div className=\"text-center py-4\">Loading transaction history...</div>}\r\n\r\n        {history.length > 0 && (\r\n          <div className=\"space-y-4\">\r\n            {history.map((item, index) => (\r\n              <div key={item.transactionHash} className=\"relative\">\r\n                {index !== 0 && (\r\n                  <div className=\"absolute left-6 -top-4 h-4 w-0.5 bg-gray-200\" />\r\n                )}\r\n                <div className=\"flex items-start gap-4 p-4 rounded-lg border border-gray-200\">\r\n                  <div className=\"mt-1\">\r\n                    {item.event === 'ProductCreated' ? (\r\n                      <AlertCircle className=\"text-blue-500\" />\r\n                    ) : (\r\n                      <CheckCircle2 className=\"text-green-500\" />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex justify-between\">\r\n                      <h3 className=\"font-medium\">\r\n                        {item.event === 'ProductCreated' ? 'Product Created' : \r\n                         item.event === 'ProductStateChanged' ? 'State Changed' : item.event}\r\n                      </h3>\r\n                      <span className=\"text-sm text-gray-500\">{item.timestamp}</span>\r\n                    </div>\r\n                    <div className=\"mt-1 text-sm text-gray-600\">\r\n                      <p>From: {item.from}</p>\r\n                      <p>Transaction: {item.transactionHash}</p>\r\n                      <p>Block: {item.blockNumber}</p>\r\n                      <div className=\"mt-2 text-xs text-gray-500\">\r\n                        <p>Gas Used: {item.gasUsed}</p>\r\n                        <p>Gas Price: {web3.utils.fromWei(item.gasPrice, 'gwei')} gwei</p>\r\n                        <p>Transaction Cost: {item.cost} ETH</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 922, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/app/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useWeb3 } from \"@/contexts/web3Context\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { useState, useEffect } from \"react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport UserRegistration from \"./registration/page\";\nimport TransactionHistory from \"./transaction-history/page\";\nimport Web3 from \"web3\";\n\nexport default function Home() {\n  const { connect, disconnect, account, isActive, contract, error } = useWeb3();\n  const [productName, setProductName] = useState(\"\");\n  const [productPrice, setProductPrice] = useState(\"\");\n  const [productId, setProductId] = useState(\"\");\n  const [connectionStatus, setConnectionStatus] = useState(\"\");\n\n  const handleConnection = async () => {\n    try {\n      setConnectionStatus(\"Connecting...\");\n      // First request account access\n      if (window.ethereum) {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        await connect();\n      } else {\n        setConnectionStatus(\"Please install MetaMask!\");\n      }\n    } catch (err: any) {\n      console.error(err);\n      setConnectionStatus(err.message || \"Failed to connect\");\n    }\n  };\n\n  const createProduct = async () => {\n    if (!contract || !account) {\n      setConnectionStatus(\"Please connect your wallet first\");\n      return;\n    }\n    try {\n      await contract.methods\n        .createProduct(productName, productPrice)\n        .send({ from: account });\n      alert(\"Product created successfully!\");\n      console.log(\"🚀 ~ file: page.tsx:151 ~ Home ~ productId:\", productId);\n    } catch (error: any) {\n      console.error(\"Error creating product:\", error);\n      setConnectionStatus(error.message);\n    }\n  };\n\n  const handleRoleAction = async (action: string) => {\n    if (!contract || !account) {\n      setConnectionStatus(\"Please connect your wallet first\");\n      return;\n    }\n    try {\n      switch (action) {\n        case \"collect\":\n          await contract.methods.collectProduct(productId).send({ from: account });\n          break;\n        case \"transport\":\n          await contract.methods.transportProduct(productId).send({ from: account });\n          break;\n        case \"distribute\":\n          await contract.methods.distributeProduct(productId).send({ from: account });\n          break;\n        case \"retail\":\n          await contract.methods.sendToRetailer(productId).send({ from: account });\n          break;\n        case \"purchase\":\n          await contract.methods.purchaseProduct(productId).send({ from: account });\n          break;\n      }\n      alert(\"Action completed successfully!\");\n    } catch (error: any) {\n      console.error(\"Error performing action:\", error);\n      setConnectionStatus(error.message);\n    }\n  };\n\n  // Check for MetaMask on component mount\n  useEffect(() => {\n    if (!window.ethereum) {\n      setConnectionStatus(\"MetaMask is not installed. Please install MetaMask to use this application.\");\n    }\n  }, []);\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <Card className=\"mb-6\">\n        <CardHeader>\n          <CardTitle>AgriSupplyChain Management</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {connectionStatus && (\n            <Alert className=\"mb-4\">\n              <AlertDescription>{connectionStatus}</AlertDescription>\n            </Alert>\n          )}\n\n          {error && (\n            <Alert className=\"mb-4\" variant=\"destructive\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n\n          {!isActive ? (\n            <div className=\"space-y-4\">\n              <p className=\"text-sm text-gray-500 mb-2\">\n                Connect your MetaMask wallet to interact with the supply chain.\n              </p>\n              <Button\n                onClick={handleConnection}\n                className=\"w-full sm:w-auto\"\n              >\n                Connect MetaMask\n              </Button>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              <p className=\"text-sm\">Connected Account: {account}</p>\n              <Button onClick={disconnect} variant=\"outline\">\n                Disconnect\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {isActive && (\n        <>\n        <UserRegistration contract={contract} account={account} />\n        <TransactionHistory\n      web3={new Web3(window.ethereum)} \n      contract={contract} \n      account={account} \n    />\n          <Card className=\"mb-6\">\n            <CardHeader>\n              <CardTitle>Create New Product</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <Input\n                placeholder=\"Product Name\"\n                value={productName}\n                onChange={(e) => setProductName(e.target.value)}\n              />\n              <Input\n                placeholder=\"Product Price\"\n                type=\"number\"\n                value={productPrice}\n                onChange={(e) => setProductPrice(e.target.value)}\n              />\n              <Button onClick={createProduct}>Create Product</Button>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Product Actions</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <Input\n                placeholder=\"Product ID\"\n                value={productId}\n                onChange={(e) => setProductId(e.target.value)}\n              />\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                <Button onClick={() => handleRoleAction(\"collect\")}>\n                  Collect Product\n                </Button>\n                <Button onClick={() => handleRoleAction(\"transport\")}>\n                  Transport Product\n                </Button>\n                <Button onClick={() => handleRoleAction(\"distribute\")}>\n                  Distribute Product\n                </Button>\n                <Button onClick={() => handleRoleAction(\"retail\")}>\n                  Send to Retailer\n                </Button>\n                <Button onClick={() => handleRoleAction(\"purchase\")}>\n                  Purchase Product\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </div>\n  );\n}\n\n// \"use client\"\n// import React, { useState, useEffect } from 'react';\n// import { useWeb3 } from \"@/contexts/web3Context\";\n// import { Button } from \"@/components/ui/button\";\n// import { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\n// import { Input } from \"@/components/ui/input\";\n// import { Alert, AlertDescription } from \"@/components/ui/alert\";\n// import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n// import { Badge } from \"@/components/ui/badge\";\n// import { \n//   History, \n//   User,\n//   Wheat,\n//   Box,\n//   Truck,\n//   Store,\n//   ShoppingBag,\n//   LogOut,\n// } from \"lucide-react\";\n// import UserRegistration from './registration/page';\n\n// // const UserRegistration = ({ contract, account, onComplete }) => {\n// //   const [role, setRole] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n\n// //   const registerUser = async () => {\n// //     try {\n// //       await contract.methods.registerUser(account, role).send({ from: account });\n// //       onComplete();\n// //     } catch (error) {\n// //       setError(error.message);\n// //     }\n// //   };\n\n// //   return (\n// //     <Card className=\"max-w-md mx-auto mt-8\">\n// //       <CardHeader>\n// //         <CardTitle className=\"flex items-center gap-2\">\n// //           <User className=\"w-5 h-5\" />\n// //           User Registration\n// //         </CardTitle>\n// //       </CardHeader>\n// //       <CardContent className=\"space-y-4\">\n// //         {error && (\n// //           <Alert variant=\"destructive\">\n// //             <AlertDescription>{error}</AlertDescription>\n// //           </Alert>\n// //         )}\n// //         <div className=\"space-y-2\">\n// //           <label className=\"text-sm font-medium\">Select Role</label>\n// //           <select\n// //             className=\"w-full p-2 border rounded-md\"\n// //             value={role}\n// //             onChange={(e) => setRole(e.target.value)}\n// //           >\n// //             <option value=\"\">Select a role</option>\n// //             <option value=\"FARMER\">Farmer</option>\n// //             <option value=\"COLLECTOR\">Collector</option>\n// //             <option value=\"TRANSPORTER\">Transporter</option>\n// //             <option value=\"DISTRIBUTOR\">Distributor</option>\n// //             <option value=\"RETAILER\">Retailer</option>\n// //           </select>\n// //         </div>\n// //         <Button onClick={registerUser} className=\"w-full\">\n// //           Register\n// //         </Button>\n// //       </CardContent>\n// //     </Card>\n// //   );\n// // };\n\n// const ProductCard = ({ product }) => {\n//   const stateColors = {\n//     Created: \"bg-blue-100 text-blue-800\",\n//     CollectedByCollector: \"bg-purple-100 text-purple-800\",\n//     WithTransporter: \"bg-yellow-100 text-yellow-800\",\n//     WithDistributor: \"bg-green-100 text-green-800\",\n//     WithRetailer: \"bg-pink-100 text-pink-800\",\n//     Sold: \"bg-gray-100 text-gray-800\"\n//   };\n\n//   return (\n//     <Card>\n//       <CardContent className=\"p-4\">\n//         <div className=\"flex justify-between items-start mb-2\">\n//           <h3 className=\"font-semibold\">{product.name}</h3>\n//           <Badge className={stateColors[product.state]}>\n//             {product.state}\n//           </Badge>\n//         </div>\n//         <p className=\"text-sm text-gray-500\">ID: {product.id}</p>\n//         <p className=\"text-sm text-gray-500\">Price: {product.price} ETH</p>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// const FarmerDashboard = ({ contract, account }) => {\n//   const [products, setProducts] = useState([]);\n//   const [productName, setProductName] = useState(\"\");\n//   const [productPrice, setProductPrice] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const createProduct = async () => {\n//     try {\n//       await contract.methods\n//         .createProduct(productName, productPrice)\n//         .send({ from: account });\n//       setProductName(\"\");\n//       setProductPrice(\"\");\n//       fetchProducts();\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   const fetchProducts = async () => {\n//     try {\n//       const count = await contract.methods.productCount().call();\n//       const fetchedProducts = [];\n//       for (let i = 1; i <= count; i++) {\n//         const product = await contract.methods.getProduct(i).call();\n//         if (product.farmer === account) {\n//           fetchedProducts.push({\n//             id: product.id,\n//             name: product.name,\n//             price: product.price,\n//             state: product.state\n//           });\n//         }\n//       }\n//       setProducts(fetchedProducts);\n//     } catch (error) {\n//       console.error(\"Error fetching products:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <Card>\n//         <CardHeader>\n//           <CardTitle className=\"flex items-center gap-2\">\n//             <Wheat className=\"w-5 h-5\" />\n//             Create New Product\n//           </CardTitle>\n//         </CardHeader>\n//         <CardContent className=\"space-y-4\">\n//           {error && (\n//             <Alert variant=\"destructive\">\n//               <AlertDescription>{error}</AlertDescription>\n//             </Alert>\n//           )}\n//           <Input\n//             placeholder=\"Product Name\"\n//             value={productName}\n//             onChange={(e) => setProductName(e.target.value)}\n//           />\n//           <Input\n//             placeholder=\"Product Price (ETH)\"\n//             type=\"number\"\n//             value={productPrice}\n//             onChange={(e) => setProductPrice(e.target.value)}\n//           />\n//           <Button onClick={createProduct} className=\"w-full\">Create Product</Button>\n//         </CardContent>\n//       </Card>\n\n//       <Card>\n//         <CardHeader>\n//           <CardTitle>My Products</CardTitle>\n//         </CardHeader>\n//         <CardContent>\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//             {products.map((product) => (\n//               <ProductCard key={product.id} product={product} />\n//             ))}\n//           </div>\n//         </CardContent>\n//       </Card>\n//     </div>\n//   );\n// };\n\n// const CollectorDashboard = ({ contract, account }) => {\n//   const [productId, setProductId] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const collectProduct = async () => {\n//     try {\n//       await contract.methods.collectProduct(productId).send({ from: account });\n//       setProductId(\"\");\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   return (\n//     <Card>\n//       <CardHeader>\n//         <CardTitle className=\"flex items-center gap-2\">\n//           <Box className=\"w-5 h-5\" />\n//           Collect Products\n//         </CardTitle>\n//       </CardHeader>\n//       <CardContent className=\"space-y-4\">\n//         {error && (\n//           <Alert variant=\"destructive\">\n//             <AlertDescription>{error}</AlertDescription>\n//           </Alert>\n//         )}\n//         <Input\n//           placeholder=\"Product ID\"\n//           value={productId}\n//           onChange={(e) => setProductId(e.target.value)}\n//         />\n//         <Button onClick={collectProduct} className=\"w-full\">\n//           Collect Product\n//         </Button>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// const TransporterDashboard = ({ contract, account }) => {\n//   const [productId, setProductId] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const transportProduct = async () => {\n//     try {\n//       await contract.methods.transportProduct(productId).send({ from: account });\n//       setProductId(\"\");\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   return (\n//     <Card>\n//       <CardHeader>\n//         <CardTitle className=\"flex items-center gap-2\">\n//           <Truck className=\"w-5 h-5\" />\n//           Transport Products\n//         </CardTitle>\n//       </CardHeader>\n//       <CardContent className=\"space-y-4\">\n//         {error && (\n//           <Alert variant=\"destructive\">\n//             <AlertDescription>{error}</AlertDescription>\n//           </Alert>\n//         )}\n//         <Input\n//           placeholder=\"Product ID\"\n//           value={productId}\n//           onChange={(e) => setProductId(e.target.value)}\n//         />\n//         <Button onClick={transportProduct} className=\"w-full\">\n//           Transport Product\n//         </Button>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// const DistributorDashboard = ({ contract, account }) => {\n//   const [productId, setProductId] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const distributeProduct = async () => {\n//     try {\n//       await contract.methods.distributeProduct(productId).send({ from: account });\n//       setProductId(\"\");\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   return (\n//     <Card>\n//       <CardHeader>\n//         <CardTitle className=\"flex items-center gap-2\">\n//           <Store className=\"w-5 h-5\" />\n//           Distribute Products\n//         </CardTitle>\n//       </CardHeader>\n//       <CardContent className=\"space-y-4\">\n//         {error && (\n//           <Alert variant=\"destructive\">\n//             <AlertDescription>{error}</AlertDescription>\n//           </Alert>\n//         )}\n//         <Input\n//           placeholder=\"Product ID\"\n//           value={productId}\n//           onChange={(e) => setProductId(e.target.value)}\n//         />\n//         <Button onClick={distributeProduct} className=\"w-full\">\n//           Distribute Product\n//         </Button>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// const RetailerDashboard = ({ contract, account }) => {\n//   const [productId, setProductId] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const sendToRetail = async () => {\n//     try {\n//       await contract.methods.sendToRetailer(productId).send({ from: account });\n//       setProductId(\"\");\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   return (\n//     <Card>\n//       <CardHeader>\n//         <CardTitle className=\"flex items-center gap-2\">\n//           <ShoppingBag className=\"w-5 h-5\" />\n//           Retail Products\n//         </CardTitle>\n//       </CardHeader>\n//       <CardContent className=\"space-y-4\">\n//         {error && (\n//           <Alert variant=\"destructive\">\n//             <AlertDescription>{error}</AlertDescription>\n//           </Alert>\n//         )}\n//         <Input\n//           placeholder=\"Product ID\"\n//           value={productId}\n//           onChange={(e) => setProductId(e.target.value)}\n//         />\n//         <Button onClick={sendToRetail} className=\"w-full\">\n//           Send to Retail\n//         </Button>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// const TransactionHistory = ({ contract, account }) => {\n//   const [transactions, setTransactions] = useState([]);\n\n//   useEffect(() => {\n//     const fetchTransactionHistory = async () => {\n//       try {\n//         // Get past events\n//         const events = await contract.getPastEvents('ProductStateChanged', {\n//           fromBlock: 0,\n//           toBlock: 'latest'\n//         });\n//         setTransactions(events);\n//       } catch (error) {\n//         console.error(\"Error fetching transaction history:\", error);\n//       }\n//     };\n\n//     fetchTransactionHistory();\n//   }, [contract]);\n\n//   return (\n//     <Card>\n//       <CardHeader>\n//         <CardTitle className=\"flex items-center gap-2\">\n//           <History className=\"w-5 h-5\" />\n//           Transaction History\n//         </CardTitle>\n//       </CardHeader>\n//       <CardContent>\n//         <div className=\"space-y-4\">\n//           {transactions.map((tx, index) => (\n//             <Card key={index}>\n//               <CardContent className=\"p-4\">\n//                 <p className=\"font-semibold\">Product ID: {tx.returnValues.productId}</p>\n//                 <p className=\"text-sm text-gray-500\">New State: {tx.returnValues.newState}</p>\n//                 <p className=\"text-xs text-gray-400\">Transaction: {tx.transactionHash}</p>\n//               </CardContent>\n//             </Card>\n//           ))}\n//         </div>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// const DashboardLayout = ({ children, userRole, onDisconnect }) => {\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       <nav className=\"bg-white shadow-sm\">\n//         <div className=\"container mx-auto px-4 py-3\">\n//           <div className=\"flex justify-between items-center\">\n//             <div className=\"flex items-center space-x-4\">\n//               <Wheat className=\"w-6 h-6\" />\n//               <h1 className=\"text-xl font-bold\">AgriSupplyChain</h1>\n//             </div>\n//             <div className=\"flex items-center gap-4\">\n//               <Badge className=\"bg-green-100 text-green-800\">\n//                 Role: {userRole}\n//               </Badge>\n//               <Button \n//                 variant=\"outline\" \n//                 className=\"flex items-center gap-2\"\n//                 onClick={onDisconnect}\n//               >\n//                 <LogOut className=\"w-4 h-4\" />\n//                 Disconnect\n//               </Button>\n//             </div>\n//           </div>\n//         </div>\n//       </nav>\n//       <main className=\"container mx-auto px-4 py-8\">\n//         {children}\n//       </main>\n//     </div>\n//   );\n// };\n\n// // export default function Home() {\n// //   const { connect, disconnect, account, isActive, contract, error } = useWeb3();\n// //   const [connectionStatus, setConnectionStatus] = useState(\"\");\n// //   const [userRole, setUserRole] = useState(null);\n// //   const [showRegistration, setShowRegistration] = useState(false);\n\n// //   const handleConnection = async () => {\n// //     try {\n// //       setConnectionStatus(\"Connecting...\");\n// //       if (window.ethereum) {\n// //         await window.ethereum.request({\n// //           method: 'eth_requestAccounts'\n// //         });\n// //         await connect();\n        \n// //         // Check if user has a role\n// //         const role = await contract.methods.userRoles(account).call();\n// //         if (!role) {\n// //           setShowRegistration(true);\n// //         } else {\n// //           setUserRole(role);\n// //         }\n// //       } else {\n// //         setConnectionStatus(\"Please install MetaMask!\");\n// //       }\n// //     } catch (err) {\n// //       console.error(err);\n// //       setConnectionStatus(err.message || \"Failed to connect\");\n// //     }\n// //   };\n\n// //   const handleRegistrationComplete = async () => {\n// //     const role = await contract.methods.userRoles(account).call();\n// //     console.log(\"🚀 ~ file: page.tsx:655 ~ handleRegistrationComplete ~ role:\", role);\n// //     setUserRole(role);\n// //     setShowRegistration(false);\n// //   };\n\n// //   useEffect(() => {\n// //     if (!window.ethereum) {\n// //       setConnectionStatus(\"MetaMask is not installed. Please install MetaMask to use this application.\");\n// //     }\n// //   }, []);\n\n// //   const renderDashboard = () => {\n// //     switch (userRole) {\n// //       case \"FARMER\":\n// //         return <FarmerDashboard contract={contract} account={account} />;\n// //       case \"COLLECTOR\":\n// //         return <CollectorDashboard contract={contract} account={account} />;\n// //       case \"TRANSPORTER\":\n// //         return <TransporterDashboard contract={contract} account={account} />;\n// //       case \"DISTRIBUTOR\":\n// //         return <DistributorDashboard contract={contract} account={account} />;\n// //       case \"RETAILER\":\n// //         return <RetailerDashboard contract={contract} account={account} />;\n// //       default:\n// //         return (\n// //           <Card>\n// //             <CardContent>\n// //               <p className=\"text-center text-gray-500\">Unknown role or role not assigned</p>\n// //             </CardContent>\n// //           </Card>\n// //         );\n// //     }\n// //   };\n\n// //   if (!isActive) {\n// //     return (\n// //       <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n// //         <Card className=\"w-full max-w-md\">\n// //           <CardHeader>\n// //             <CardTitle className=\"flex items-center gap-2\">\n// //               <Wheat className=\"w-6 h-6\" />\n// //               Welcome to AgriSupplyChain\n// //             </CardTitle>\n// //           </CardHeader>\n// //           <CardContent>\n// //             {connectionStatus && (\n// //               <Alert className=\"mb-4\">\n// //                 <AlertDescription>{connectionStatus}</AlertDescription>\n// //               </Alert>\n// //             )}\n// //             {error && (\n// //               <Alert className=\"mb-4\" variant=\"destructive\">\n// //                 <AlertDescription>{error}</AlertDescription>\n// //               </Alert>\n// //             )}\n// //             <Button\n// //               onClick={handleConnection}\n// //               className=\"w-full\"\n// //             >\n// //               Connect with MetaMask\n// //             </Button>\n// //           </CardContent>\n// //         </Card>\n// //       </div>\n// //     );\n// //   }\n\n// //   if (showRegistration) {\n// //     return <UserRegistration \n// //       contract={contract} \n// //       account={account} \n// //       onComplete={handleRegistrationComplete}\n// //     />;\n// //   }\n\n// //   return (\n// //     <DashboardLayout onDisconnect={disconnect} userRole={userRole}>\n// //       <Tabs defaultValue=\"dashboard\" className=\"space-y-6\">\n// //         <TabsList className=\"grid w-full grid-cols-2\">\n// //           <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n// //           <TabsTrigger value=\"history\">Transaction History</TabsTrigger>\n// //         </TabsList>\n        \n// //         <TabsContent value=\"dashboard\">\n// //           {renderDashboard()}\n// //         </TabsContent>\n        \n// //         <TabsContent value=\"history\">\n// //           <TransactionHistory \n// //             contract={contract} \n// //             account={account}\n// //           />\n// //         </TabsContent>\n// //       </Tabs>\n// //     </DashboardLayout>\n// //   );\n// // }\n\n\n// // 'use client';\n\n// // import { useState, useEffect } from 'react';\n// // import { useWeb3 } from \"@/contexts/web3Context\";\n// // import { Button } from \"@/components/ui/button\";\n// // import { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\n// // import { Alert, AlertDescription } from \"@/components/ui/alert\";\n// // import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n// // import { Badge } from \"@/components/ui/badge\";\n// // import { \n// //   History, \n// //   Wheat,\n// //   LogOut,\n// // } from \"lucide-react\";\n// // import UserRegistration from './registration/page';\n\n// export default function Home() {\n//   const { connect, disconnect, account, isActive, contract, error } = useWeb3();\n//   const [connectionStatus, setConnectionStatus] = useState(\"\");\n//   const [userRole, setUserRole] = useState(null);\n//   const [showRegistration, setShowRegistration] = useState(false);\n//   const [registrationComplete, setRegistrationComplete] = useState(false);\n\n//   const handleConnection = async () => {\n//     try {\n//       setConnectionStatus(\"Connecting...\");\n//       if (window.ethereum) {\n//         await window.ethereum.request({\n//           method: 'eth_requestAccounts'\n//         });\n//         await connect();\n//         // After successful connection, immediately show registration\n//         setShowRegistration(true);\n//       } else {\n//         setConnectionStatus(\"Please install MetaMask!\");\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       setConnectionStatus(err.message || \"Failed to connect\");\n//     }\n//   };\n\n//   // Effect to check user role whenever registration might have completed\n//   useEffect(() => {\n//     const checkUserRole = async () => {\n//       if (isActive && account && contract) {\n//         try {\n//           const role = await contract.methods.userRoles(account).call();\n//           if (role && role !== \"\") {\n//             setUserRole(role);\n//             setShowRegistration(false);\n//             setRegistrationComplete(true);\n//           }\n//         } catch (err) {\n//           console.error(\"Error checking role:\", err);\n//         }\n//       }\n//     };\n\n//     checkUserRole();\n//   }, [isActive, account, contract, registrationComplete]);\n\n//   // Check for MetaMask on component mount\n//   useEffect(() => {\n//     if (!window.ethereum) {\n//       setConnectionStatus(\"MetaMask is not installed. Please install MetaMask to use this application.\");\n//     }\n//   }, []);\n\n//   if (!isActive) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n//         <Card className=\"w-full max-w-md\">\n//           <CardHeader>\n//             <CardTitle className=\"flex items-center gap-2\">\n//               <Wheat className=\"w-6 h-6\" />\n//               Welcome to AgriSupplyChain\n//             </CardTitle>\n//           </CardHeader>\n//           <CardContent>\n//             {connectionStatus && (\n//               <Alert className=\"mb-4\">\n//                 <AlertDescription>{connectionStatus}</AlertDescription>\n//               </Alert>\n//             )}\n//             {error && (\n//               <Alert className=\"mb-4\" variant=\"destructive\">\n//                 <AlertDescription>{error}</AlertDescription>\n//               </Alert>\n//             )}\n//             <Button\n//               onClick={handleConnection}\n//               className=\"w-full\"\n//             >\n//               Connect with MetaMask\n//             </Button>\n//           </CardContent>\n//         </Card>\n//       </div>\n//     );\n//   }\n\n//   if (showRegistration) {\n//     return (\n//       <div className=\"container mx-auto p-4\">\n//         <UserRegistration\n//           contract={contract} \n//           account={account} \n//         />\n//       </div>\n//     );\n//   }\n\n//   // Rest of your dashboard code here\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       <nav className=\"bg-white shadow-sm\">\n//         <div className=\"container mx-auto px-4 py-3\">\n//           <div className=\"flex justify-between items-center\">\n//             <div className=\"flex items-center space-x-4\">\n//               <Wheat className=\"w-6 h-6\" />\n//               <h1 className=\"text-xl font-bold\">AgriSupplyChain</h1>\n//             </div>\n//             <div className=\"flex items-center gap-4\">\n//               <Badge className=\"bg-green-100 text-green-800\">\n//                 Role: {userRole}\n//               </Badge>\n//               <Button \n//                 variant=\"outline\" \n//                 className=\"flex items-center gap-2\"\n//                 onClick={disconnect}\n//               >\n//                 <LogOut className=\"w-4 h-4\" />\n//                 Disconnect\n//               </Button>\n//             </div>\n//           </div>\n//         </div>\n//       </nav>\n//       <main className=\"container mx-auto px-4 py-8\">\n//         {/* Add your role-specific dashboard components here */}\n//         <h2>Welcome, {userRole}!</h2>\n//         {/* You can add the rest of your dashboard components based on the role */}\n//       </main>\n//     </div>\n//   );\n// }\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;;;;;;;AAYe,SAAS;IACtB,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1E,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,MAAM,mBAAmB;QACvB,IAAI;YACF,oBAAoB;YACpB,+BAA+B;YAC/B,IAAI,OAAO,QAAQ,EAAE;gBACnB,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;oBAC5B,QAAQ;gBACV;gBACA,MAAM;YACR,OAAO;gBACL,oBAAoB;YACtB;QACF,EAAE,OAAO,KAAU;YACjB,QAAQ,KAAK,CAAC;YACd,oBAAoB,IAAI,OAAO,IAAI;QACrC;IACF;IAEA,MAAM,gBAAgB;QACpB,IAAI,CAAC,YAAY,CAAC,SAAS;YACzB,oBAAoB;YACpB;QACF;QACA,IAAI;YACF,MAAM,SAAS,OAAO,CACnB,aAAa,CAAC,aAAa,cAC3B,IAAI,CAAC;gBAAE,MAAM;YAAQ;YACxB,MAAM;YACN,QAAQ,GAAG,CAAC,+CAA+C;QAC7D,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,2BAA2B;YACzC,oBAAoB,MAAM,OAAO;QACnC;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,IAAI,CAAC,YAAY,CAAC,SAAS;YACzB,oBAAoB;YACpB;QACF;QACA,IAAI;YACF,OAAQ;gBACN,KAAK;oBACH,MAAM,SAAS,OAAO,CAAC,cAAc,CAAC,WAAW,IAAI,CAAC;wBAAE,MAAM;oBAAQ;oBACtE;gBACF,KAAK;oBACH,MAAM,SAAS,OAAO,CAAC,gBAAgB,CAAC,WAAW,IAAI,CAAC;wBAAE,MAAM;oBAAQ;oBACxE;gBACF,KAAK;oBACH,MAAM,SAAS,OAAO,CAAC,iBAAiB,CAAC,WAAW,IAAI,CAAC;wBAAE,MAAM;oBAAQ;oBACzE;gBACF,KAAK;oBACH,MAAM,SAAS,OAAO,CAAC,cAAc,CAAC,WAAW,IAAI,CAAC;wBAAE,MAAM;oBAAQ;oBACtE;gBACF,KAAK;oBACH,MAAM,SAAS,OAAO,CAAC,eAAe,CAAC,WAAW,IAAI,CAAC;wBAAE,MAAM;oBAAQ;oBACvE;YACJ;YACA,MAAM;QACR,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,oBAAoB,MAAM,OAAO;QACnC;IACF;IAEA,wCAAwC;IACxC,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO,QAAQ,EAAE;YACpB,oBAAoB;QACtB;IACF,GAAG,EAAE;IAEL,qBACE,+YAAC;QAAI,WAAU;;0BACb,+YAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,+YAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,+YAAC,gIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;kCAEb,+YAAC,gIAAA,CAAA,cAAW;;4BACT,kCACC,+YAAC,iIAAA,CAAA,QAAK;gCAAC,WAAU;0CACf,cAAA,+YAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;4BAItB,uBACC,+YAAC,iIAAA,CAAA,QAAK;gCAAC,WAAU;gCAAO,SAAQ;0CAC9B,cAAA,+YAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;4BAItB,CAAC,yBACA,+YAAC;gCAAI,WAAU;;kDACb,+YAAC;wCAAE,WAAU;kDAA6B;;;;;;kDAG1C,+YAAC,kIAAA,CAAA,SAAM;wCACL,SAAS;wCACT,WAAU;kDACX;;;;;;;;;;;qDAKH,+YAAC;gCAAI,WAAU;;kDACb,+YAAC;wCAAE,WAAU;;4CAAU;4CAAoB;;;;;;;kDAC3C,+YAAC,kIAAA,CAAA,SAAM;wCAAC,SAAS;wCAAY,SAAQ;kDAAU;;;;;;;;;;;;;;;;;;;;;;;;YAQtD,0BACC;;kCACA,+YAAC,mIAAA,CAAA,UAAgB;wBAAC,UAAU;wBAAU,SAAS;;;;;;kCAC/C,+YAAC,6IAAA,CAAA,UAAkB;wBACrB,MAAM,IAAI,0TAAA,CAAA,UAAI,CAAC,OAAO,QAAQ;wBAC9B,UAAU;wBACV,SAAS;;;;;;kCAEL,+YAAC,gIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,+YAAC,gIAAA,CAAA,aAAU;0CACT,cAAA,+YAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;;;;;;0CAEb,+YAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;;kDACrB,+YAAC,iIAAA,CAAA,QAAK;wCACJ,aAAY;wCACZ,OAAO;wCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;kDAEhD,+YAAC,iIAAA,CAAA,QAAK;wCACJ,aAAY;wCACZ,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;;;;;;kDAEjD,+YAAC,kIAAA,CAAA,SAAM;wCAAC,SAAS;kDAAe;;;;;;;;;;;;;;;;;;kCAIpC,+YAAC,gIAAA,CAAA,OAAI;;0CACH,+YAAC,gIAAA,CAAA,aAAU;0CACT,cAAA,+YAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;;;;;;0CAEb,+YAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;;kDACrB,+YAAC,iIAAA,CAAA,QAAK;wCACJ,aAAY;wCACZ,OAAO;wCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;kDAE9C,+YAAC;wCAAI,WAAU;;0DACb,+YAAC,kIAAA,CAAA,SAAM;gDAAC,SAAS,IAAM,iBAAiB;0DAAY;;;;;;0DAGpD,+YAAC,kIAAA,CAAA,SAAM;gDAAC,SAAS,IAAM,iBAAiB;0DAAc;;;;;;0DAGtD,+YAAC,kIAAA,CAAA,SAAM;gDAAC,SAAS,IAAM,iBAAiB;0DAAe;;;;;;0DAGvD,+YAAC,kIAAA,CAAA,SAAM;gDAAC,SAAS,IAAM,iBAAiB;0DAAW;;;;;;0DAGnD,+YAAC,kIAAA,CAAA,SAAM;gDAAC,SAAS,IAAM,iBAAiB;0DAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUrE,EAEA,eAAe;CACf,sDAAsD;CACtD,oDAAoD;CACpD,mDAAmD;CACnD,mFAAmF;CACnF,iDAAiD;CACjD,mEAAmE;CACnE,mFAAmF;CACnF,iDAAiD;CACjD,YAAY;CACZ,cAAc;CACd,UAAU;CACV,WAAW;CACX,SAAS;CACT,WAAW;CACX,WAAW;CACX,iBAAiB;CACjB,YAAY;CACZ,yBAAyB;CACzB,sDAAsD;CAEtD,uEAAuE;CACvE,6CAA6C;CAC7C,+CAA+C;CAE/C,0CAA0C;CAC1C,eAAe;CACf,uFAAuF;CACvF,yBAAyB;CACzB,2BAA2B;CAC3B,oCAAoC;CACpC,WAAW;CACX,UAAU;CAEV,gBAAgB;CAChB,kDAAkD;CAClD,wBAAwB;CACxB,6DAA6D;CAC7D,4CAA4C;CAC5C,iCAAiC;CACjC,0BAA0B;CAC1B,yBAAyB;CACzB,+CAA+C;CAC/C,yBAAyB;CACzB,6CAA6C;CAC7C,8DAA8D;CAC9D,wBAAwB;CACxB,gBAAgB;CAChB,yCAAyC;CACzC,0EAA0E;CAC1E,uBAAuB;CACvB,0DAA0D;CAC1D,8BAA8B;CAC9B,2DAA2D;CAC3D,iBAAiB;CACjB,yDAAyD;CACzD,wDAAwD;CACxD,8DAA8D;CAC9D,kEAAkE;CAClE,kEAAkE;CAClE,4DAA4D;CAC5D,yBAAyB;CACzB,oBAAoB;CACpB,gEAAgE;CAChE,wBAAwB;CACxB,uBAAuB;CACvB,0BAA0B;CAC1B,iBAAiB;CACjB,UAAU;CACV,QAAQ;CAER,yCAAyC;CACzC,0BAA0B;CAC1B,4CAA4C;CAC5C,6DAA6D;CAC7D,wDAAwD;CACxD,sDAAsD;CACtD,iDAAiD;CACjD,wCAAwC;CACxC,OAAO;CAEP,aAAa;CACb,aAAa;CACb,sCAAsC;CACtC,kEAAkE;CAClE,8DAA8D;CAC9D,2DAA2D;CAC3D,8BAA8B;CAC9B,qBAAqB;CACrB,iBAAiB;CACjB,oEAAoE;CACpE,8EAA8E;CAC9E,uBAAuB;CACvB,cAAc;CACd,OAAO;CACP,KAAK;CAEL,uDAAuD;CACvD,kDAAkD;CAClD,wDAAwD;CACxD,0DAA0D;CAC1D,4CAA4C;CAE5C,wCAAwC;CACxC,YAAY;CACZ,+BAA+B;CAC/B,oDAAoD;CACpD,oCAAoC;CACpC,4BAA4B;CAC5B,6BAA6B;CAC7B,yBAAyB;CACzB,wBAAwB;CACxB,iCAAiC;CACjC,QAAQ;CACR,OAAO;CAEP,wCAAwC;CACxC,YAAY;CACZ,oEAAoE;CACpE,oCAAoC;CACpC,2CAA2C;CAC3C,uEAAuE;CACvE,4CAA4C;CAC5C,mCAAmC;CACnC,8BAA8B;CAC9B,kCAAkC;CAClC,oCAAoC;CACpC,mCAAmC;CACnC,gBAAgB;CAChB,YAAY;CACZ,UAAU;CACV,sCAAsC;CACtC,wBAAwB;CACxB,0DAA0D;CAC1D,QAAQ;CACR,OAAO;CAEP,sBAAsB;CACtB,uBAAuB;CACvB,YAAY;CAEZ,aAAa;CACb,kCAAkC;CAClC,eAAe;CACf,uBAAuB;CACvB,4DAA4D;CAC5D,4CAA4C;CAC5C,iCAAiC;CACjC,yBAAyB;CACzB,wBAAwB;CACxB,8CAA8C;CAC9C,wBAAwB;CACxB,4CAA4C;CAC5C,6DAA6D;CAC7D,uBAAuB;CACvB,eAAe;CACf,mBAAmB;CACnB,yCAAyC;CACzC,kCAAkC;CAClC,+DAA+D;CAC/D,eAAe;CACf,mBAAmB;CACnB,gDAAgD;CAChD,4BAA4B;CAC5B,mCAAmC;CACnC,gEAAgE;CAChE,eAAe;CACf,uFAAuF;CACvF,yBAAyB;CACzB,gBAAgB;CAEhB,eAAe;CACf,uBAAuB;CACvB,+CAA+C;CAC/C,wBAAwB;CACxB,wBAAwB;CACxB,oEAAoE;CACpE,2CAA2C;CAC3C,mEAAmE;CACnE,kBAAkB;CAClB,mBAAmB;CACnB,yBAAyB;CACzB,gBAAgB;CAChB,aAAa;CACb,OAAO;CACP,KAAK;CAEL,0DAA0D;CAC1D,oDAAoD;CACpD,4CAA4C;CAE5C,yCAAyC;CACzC,YAAY;CACZ,kFAAkF;CAClF,0BAA0B;CAC1B,wBAAwB;CACxB,iCAAiC;CACjC,QAAQ;CACR,OAAO;CAEP,aAAa;CACb,aAAa;CACb,qBAAqB;CACrB,0DAA0D;CAC1D,wCAAwC;CACxC,6BAA6B;CAC7B,uBAAuB;CACvB,sBAAsB;CACtB,4CAA4C;CAC5C,sBAAsB;CACtB,0CAA0C;CAC1C,2DAA2D;CAC3D,qBAAqB;CACrB,aAAa;CACb,iBAAiB;CACjB,qCAAqC;CACrC,8BAA8B;CAC9B,2DAA2D;CAC3D,aAAa;CACb,+DAA+D;CAC/D,4BAA4B;CAC5B,oBAAoB;CACpB,uBAAuB;CACvB,cAAc;CACd,OAAO;CACP,KAAK;CAEL,4DAA4D;CAC5D,oDAAoD;CACpD,4CAA4C;CAE5C,2CAA2C;CAC3C,YAAY;CACZ,oFAAoF;CACpF,0BAA0B;CAC1B,wBAAwB;CACxB,iCAAiC;CACjC,QAAQ;CACR,OAAO;CAEP,aAAa;CACb,aAAa;CACb,qBAAqB;CACrB,0DAA0D;CAC1D,0CAA0C;CAC1C,+BAA+B;CAC/B,uBAAuB;CACvB,sBAAsB;CACtB,4CAA4C;CAC5C,sBAAsB;CACtB,0CAA0C;CAC1C,2DAA2D;CAC3D,qBAAqB;CACrB,aAAa;CACb,iBAAiB;CACjB,qCAAqC;CACrC,8BAA8B;CAC9B,2DAA2D;CAC3D,aAAa;CACb,iEAAiE;CACjE,8BAA8B;CAC9B,oBAAoB;CACpB,uBAAuB;CACvB,cAAc;CACd,OAAO;CACP,KAAK;CAEL,4DAA4D;CAC5D,oDAAoD;CACpD,4CAA4C;CAE5C,4CAA4C;CAC5C,YAAY;CACZ,qFAAqF;CACrF,0BAA0B;CAC1B,wBAAwB;CACxB,iCAAiC;CACjC,QAAQ;CACR,OAAO;CAEP,aAAa;CACb,aAAa;CACb,qBAAqB;CACrB,0DAA0D;CAC1D,0CAA0C;CAC1C,gCAAgC;CAChC,uBAAuB;CACvB,sBAAsB;CACtB,4CAA4C;CAC5C,sBAAsB;CACtB,0CAA0C;CAC1C,2DAA2D;CAC3D,qBAAqB;CACrB,aAAa;CACb,iBAAiB;CACjB,qCAAqC;CACrC,8BAA8B;CAC9B,2DAA2D;CAC3D,aAAa;CACb,kEAAkE;CAClE,+BAA+B;CAC/B,oBAAoB;CACpB,uBAAuB;CACvB,cAAc;CACd,OAAO;CACP,KAAK;CAEL,yDAAyD;CACzD,oDAAoD;CACpD,4CAA4C;CAE5C,uCAAuC;CACvC,YAAY;CACZ,kFAAkF;CAClF,0BAA0B;CAC1B,wBAAwB;CACxB,iCAAiC;CACjC,QAAQ;CACR,OAAO;CAEP,aAAa;CACb,aAAa;CACb,qBAAqB;CACrB,0DAA0D;CAC1D,gDAAgD;CAChD,4BAA4B;CAC5B,uBAAuB;CACvB,sBAAsB;CACtB,4CAA4C;CAC5C,sBAAsB;CACtB,0CAA0C;CAC1C,2DAA2D;CAC3D,qBAAqB;CACrB,aAAa;CACb,iBAAiB;CACjB,qCAAqC;CACrC,8BAA8B;CAC9B,2DAA2D;CAC3D,aAAa;CACb,6DAA6D;CAC7D,2BAA2B;CAC3B,oBAAoB;CACpB,uBAAuB;CACvB,cAAc;CACd,OAAO;CACP,KAAK;CAEL,0DAA0D;CAC1D,0DAA0D;CAE1D,sBAAsB;CACtB,oDAAoD;CACpD,cAAc;CACd,6BAA6B;CAC7B,+EAA+E;CAC/E,0BAA0B;CAC1B,8BAA8B;CAC9B,cAAc;CACd,mCAAmC;CACnC,0BAA0B;CAC1B,uEAAuE;CACvE,UAAU;CACV,SAAS;CAET,iCAAiC;CACjC,oBAAoB;CAEpB,aAAa;CACb,aAAa;CACb,qBAAqB;CACrB,0DAA0D;CAC1D,4CAA4C;CAC5C,gCAAgC;CAChC,uBAAuB;CACvB,sBAAsB;CACtB,sBAAsB;CACtB,sCAAsC;CACtC,+CAA+C;CAC/C,iCAAiC;CACjC,8CAA8C;CAC9C,2FAA2F;CAC3F,iGAAiG;CACjG,6FAA6F;CAC7F,+BAA+B;CAC/B,sBAAsB;CACtB,gBAAgB;CAChB,iBAAiB;CACjB,uBAAuB;CACvB,cAAc;CACd,OAAO;CACP,KAAK;CAEL,sEAAsE;CACtE,aAAa;CACb,gDAAgD;CAChD,6CAA6C;CAC7C,wDAAwD;CACxD,gEAAgE;CAChE,4DAA4D;CAC5D,8CAA8C;CAC9C,uEAAuE;CACvE,qBAAqB;CACrB,wDAAwD;CACxD,gEAAgE;CAChE,mCAAmC;CACnC,yBAAyB;CACzB,yBAAyB;CACzB,qCAAqC;CACrC,sDAAsD;CACtD,yCAAyC;CACzC,kBAAkB;CAClB,iDAAiD;CACjD,6BAA6B;CAC7B,0BAA0B;CAC1B,qBAAqB;CACrB,mBAAmB;CACnB,iBAAiB;CACjB,eAAe;CACf,uDAAuD;CACvD,qBAAqB;CACrB,gBAAgB;CAChB,aAAa;CACb,OAAO;CACP,KAAK;CAEL,sCAAsC;CACtC,sFAAsF;CACtF,qEAAqE;CACrE,uDAAuD;CACvD,wEAAwE;CAExE,8CAA8C;CAC9C,eAAe;CACf,iDAAiD;CACjD,kCAAkC;CAClC,6CAA6C;CAC7C,6CAA6C;CAC7C,iBAAiB;CACjB,8BAA8B;CAE9B,yCAAyC;CACzC,4EAA4E;CAC5E,0BAA0B;CAC1B,0CAA0C;CAC1C,sBAAsB;CACtB,kCAAkC;CAClC,eAAe;CACf,oBAAoB;CACpB,8DAA8D;CAC9D,aAAa;CACb,yBAAyB;CACzB,+BAA+B;CAC/B,oEAAoE;CACpE,WAAW;CACX,UAAU;CAEV,wDAAwD;CACxD,wEAAwE;CACxE,4FAA4F;CAC5F,4BAA4B;CAC5B,qCAAqC;CACrC,UAAU;CAEV,yBAAyB;CACzB,iCAAiC;CACjC,+GAA+G;CAC/G,WAAW;CACX,eAAe;CAEf,uCAAuC;CACvC,6BAA6B;CAC7B,0BAA0B;CAC1B,+EAA+E;CAC/E,6BAA6B;CAC7B,kFAAkF;CAClF,+BAA+B;CAC/B,oFAAoF;CACpF,+BAA+B;CAC/B,oFAAoF;CACpF,4BAA4B;CAC5B,iFAAiF;CACjF,oBAAoB;CACpB,sBAAsB;CACtB,sBAAsB;CACtB,+BAA+B;CAC/B,kGAAkG;CAClG,gCAAgC;CAChC,uBAAuB;CACvB,gBAAgB;CAChB,WAAW;CACX,UAAU;CAEV,wBAAwB;CACxB,kBAAkB;CAClB,sFAAsF;CACtF,gDAAgD;CAChD,4BAA4B;CAC5B,iEAAiE;CACjE,iDAAiD;CACjD,8CAA8C;CAC9C,8BAA8B;CAC9B,6BAA6B;CAC7B,6BAA6B;CAC7B,wCAAwC;CACxC,4CAA4C;CAC5C,6EAA6E;CAC7E,4BAA4B;CAC5B,oBAAoB;CACpB,6BAA6B;CAC7B,kEAAkE;CAClE,kEAAkE;CAClE,4BAA4B;CAC5B,oBAAoB;CACpB,yBAAyB;CACzB,8CAA8C;CAC9C,sCAAsC;CACtC,mBAAmB;CACnB,yCAAyC;CACzC,2BAA2B;CAC3B,8BAA8B;CAC9B,qBAAqB;CACrB,kBAAkB;CAClB,YAAY;CACZ,SAAS;CAET,+BAA+B;CAC/B,mCAAmC;CACnC,gCAAgC;CAChC,8BAA8B;CAC9B,mDAAmD;CACnD,aAAa;CACb,SAAS;CAET,gBAAgB;CAChB,yEAAyE;CACzE,iEAAiE;CACjE,4DAA4D;CAC5D,sEAAsE;CACtE,8EAA8E;CAC9E,yBAAyB;CAEzB,6CAA6C;CAC7C,mCAAmC;CACnC,4BAA4B;CAE5B,2CAA2C;CAC3C,oCAAoC;CACpC,sCAAsC;CACtC,mCAAmC;CACnC,kBAAkB;CAClB,4BAA4B;CAC5B,mBAAmB;CACnB,4BAA4B;CAC5B,UAAU;CACV,OAAO;CAGP,mBAAmB;CAEnB,kDAAkD;CAClD,uDAAuD;CACvD,sDAAsD;CACtD,sFAAsF;CACtF,sEAAsE;CACtE,sFAAsF;CACtF,oDAAoD;CACpD,eAAe;CACf,iBAAiB;CACjB,cAAc;CACd,eAAe;CACf,4BAA4B;CAC5B,yDAAyD;CAEzD,mCAAmC;CACnC,mFAAmF;CACnF,kEAAkE;CAClE,oDAAoD;CACpD,qEAAqE;CACrE,6EAA6E;CAE7E,2CAA2C;CAC3C,YAAY;CACZ,8CAA8C;CAC9C,+BAA+B;CAC/B,0CAA0C;CAC1C,0CAA0C;CAC1C,cAAc;CACd,2BAA2B;CAC3B,wEAAwE;CACxE,qCAAqC;CACrC,iBAAiB;CACjB,2DAA2D;CAC3D,UAAU;CACV,sBAAsB;CACtB,4BAA4B;CAC5B,iEAAiE;CACjE,QAAQ;CACR,OAAO;CAEP,4EAA4E;CAC5E,sBAAsB;CACtB,0CAA0C;CAC1C,+CAA+C;CAC/C,gBAAgB;CAChB,2EAA2E;CAC3E,uCAAuC;CACvC,iCAAiC;CACjC,0CAA0C;CAC1C,6CAA6C;CAC7C,cAAc;CACd,0BAA0B;CAC1B,wDAAwD;CACxD,YAAY;CACZ,UAAU;CACV,SAAS;CAET,uBAAuB;CACvB,6DAA6D;CAE7D,6CAA6C;CAC7C,sBAAsB;CACtB,8BAA8B;CAC9B,4GAA4G;CAC5G,QAAQ;CACR,YAAY;CAEZ,qBAAqB;CACrB,eAAe;CACf,mFAAmF;CACnF,6CAA6C;CAC7C,yBAAyB;CACzB,8DAA8D;CAC9D,8CAA8C;CAC9C,2CAA2C;CAC3C,2BAA2B;CAC3B,0BAA0B;CAC1B,0BAA0B;CAC1B,qCAAqC;CACrC,yCAAyC;CACzC,0EAA0E;CAC1E,yBAAyB;CACzB,iBAAiB;CACjB,0BAA0B;CAC1B,+DAA+D;CAC/D,+DAA+D;CAC/D,yBAAyB;CACzB,iBAAiB;CACjB,sBAAsB;CACtB,2CAA2C;CAC3C,mCAAmC;CACnC,gBAAgB;CAChB,sCAAsC;CACtC,wBAAwB;CACxB,2BAA2B;CAC3B,kBAAkB;CAClB,eAAe;CACf,SAAS;CACT,MAAM;CAEN,4BAA4B;CAC5B,eAAe;CACf,gDAAgD;CAChD,4BAA4B;CAC5B,iCAAiC;CACjC,+BAA+B;CAC/B,aAAa;CACb,eAAe;CACf,SAAS;CACT,MAAM;CAEN,wCAAwC;CACxC,aAAa;CACb,gDAAgD;CAChD,6CAA6C;CAC7C,wDAAwD;CACxD,gEAAgE;CAChE,4DAA4D;CAC5D,8CAA8C;CAC9C,uEAAuE;CACvE,qBAAqB;CACrB,wDAAwD;CACxD,gEAAgE;CAChE,mCAAmC;CACnC,yBAAyB;CACzB,yBAAyB;CACzB,qCAAqC;CACrC,sDAAsD;CACtD,uCAAuC;CACvC,kBAAkB;CAClB,iDAAiD;CACjD,6BAA6B;CAC7B,0BAA0B;CAC1B,qBAAqB;CACrB,mBAAmB;CACnB,iBAAiB;CACjB,eAAe;CACf,uDAAuD;CACvD,mEAAmE;CACnE,wCAAwC;CACxC,sFAAsF;CACtF,gBAAgB;CAChB,aAAa;CACb,OAAO;CACP,IAAI"}},
    {"offset": {"line": 1980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}