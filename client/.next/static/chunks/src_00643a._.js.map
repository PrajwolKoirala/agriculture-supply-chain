{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,4NAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,yLAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,+TAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,uSAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8VAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,+TAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,+TAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,+TAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,+TAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,+TAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,+TAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,+TAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8VAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,+TAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8VAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,+TAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,+TAAM,UAAU,OAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,8XAAc,IAAI;AAE/B,MAAM,yBAAW,+TAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC,8XAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,8XAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,+TAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC,8XAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,8XAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,+TAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8VAAC,8XAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,8XAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8VAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS"}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 632, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/app/registration/page.tsx"],"sourcesContent":["\"use client\"\r\nimport { useState } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\r\n\r\nconst UserRegistration = ({ contract, account }) => {\r\n  const [address, setAddress] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const registerUser = async () => {\r\n    if (!contract || !account) {\r\n      setStatus('Please connect your wallet first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setStatus('Registering user...');\r\n      \r\n      // Use the connected account if no address is provided\r\n      const targetAddress = address || account;\r\n      \r\n      const result = await contract.methods\r\n        .registerUser(targetAddress, role)\r\n        .send({ from: account });\r\n      \r\n      setStatus(`Successfully registered address ${targetAddress} as ${role}`);\r\n      setAddress('');\r\n      setRole('');\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setStatus(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-6\">\r\n      <CardHeader>\r\n        <CardTitle>User Registration</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <Input\r\n          placeholder=\"Address (leave empty to use connected wallet)\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n        />\r\n        <Select onValueChange={setRole} value={role}>\r\n          <SelectTrigger>\r\n            <SelectValue placeholder=\"Select role\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"FARMER\">Farmer</SelectItem>\r\n            <SelectItem value=\"COLLECTOR\">Collector</SelectItem>\r\n            <SelectItem value=\"TRANSPORTER\">Transporter</SelectItem>\r\n            <SelectItem value=\"DISTRIBUTOR\">Distributor</SelectItem>\r\n            <SelectItem value=\"RETAILER\">Retailer</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n        <Button onClick={registerUser}>Register User</Button>\r\n        {status && (\r\n          <Alert>\r\n            <AlertDescription>{status}</AlertDescription>\r\n          </Alert>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AANA;;;;;;;AAQA,MAAM,mBAAmB,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE;;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,eAAe;QACnB,IAAI,CAAC,YAAY,CAAC,SAAS;YACzB,UAAU;YACV;QACF;QAEA,IAAI;YACF,UAAU;YAEV,sDAAsD;YACtD,MAAM,gBAAgB,WAAW;YAEjC,MAAM,SAAS,MAAM,SAAS,OAAO,CAClC,YAAY,CAAC,eAAe,MAC5B,IAAI,CAAC;gBAAE,MAAM;YAAQ;YAExB,UAAU,CAAC,gCAAgC,EAAE,cAAc,IAAI,EAAE,MAAM;YACvE,WAAW;YACX,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,UAAU,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;QACrC;IACF;IAEA,qBACE,8VAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8VAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,8VAAC,mIAAA,CAAA,YAAS;8BAAC;;;;;;;;;;;0BAEb,8VAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8VAAC,oIAAA,CAAA,QAAK;wBACJ,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE5C,8VAAC,qIAAA,CAAA,SAAM;wBAAC,eAAe;wBAAS,OAAO;;0CACrC,8VAAC,qIAAA,CAAA,gBAAa;0CACZ,cAAA,8VAAC,qIAAA,CAAA,cAAW;oCAAC,aAAY;;;;;;;;;;;0CAE3B,8VAAC,qIAAA,CAAA,gBAAa;;kDACZ,8VAAC,qIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAS;;;;;;kDAC3B,8VAAC,qIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAY;;;;;;kDAC9B,8VAAC,qIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAc;;;;;;kDAChC,8VAAC,qIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAc;;;;;;kDAChC,8VAAC,qIAAA,CAAA,aAAU;wCAAC,OAAM;kDAAW;;;;;;;;;;;;;;;;;;kCAGjC,8VAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;kCAAc;;;;;;oBAC9B,wBACC,8VAAC,oIAAA,CAAA,QAAK;kCACJ,cAAA,8VAAC,oIAAA,CAAA,mBAAgB;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAM/B;GA9DM;KAAA;uCAgES"}},
    {"offset": {"line": 823, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 829, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/OneDrive/Desktop/supplychain/client/src/app/page.tsx"],"sourcesContent":["\n// \"use client\"\n// import React, { useState, useEffect } from 'react';\n// import { useWeb3 } from \"@/contexts/web3Context\";\n// import { Button } from \"@/components/ui/button\";\n// import { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\n// import { Input } from \"@/components/ui/input\";\n// import { Alert, AlertDescription } from \"@/components/ui/alert\";\n// import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n// import { Badge } from \"@/components/ui/badge\";\n// import { \n//   History, \n//   User,\n//   Wheat,\n//   Box,\n//   Truck,\n//   Store,\n//   ShoppingBag,\n//   LogOut,\n// } from \"lucide-react\";\n// import UserRegistration from './registration/page';\n\n// const ProductCard = ({ product }) => {\n//   const stateColors = {\n//     Created: \"bg-blue-100 text-blue-800\",\n//     CollectedByCollector: \"bg-purple-100 text-purple-800\",\n//     WithTransporter: \"bg-yellow-100 text-yellow-800\",\n//     WithDistributor: \"bg-green-100 text-green-800\",\n//     WithRetailer: \"bg-pink-100 text-pink-800\",\n//     Sold: \"bg-gray-100 text-gray-800\"\n//   };\n\n//   return (\n//     <Card>\n//       <CardContent className=\"p-4\">\n//         <div className=\"flex justify-between items-start mb-2\">\n//           <h3 className=\"font-semibold\">{product.name}</h3>\n//           <Badge className={stateColors[product.state]}>\n//             {product.state}\n//           </Badge>\n//         </div>\n//         <p className=\"text-sm text-gray-500\">ID: {product.id}</p>\n//         <p className=\"text-sm text-gray-500\">Price: {product.price} ETH</p>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// const FarmerDashboard = ({ contract, account }) => {\n//   const [products, setProducts] = useState([]);\n//   const [productName, setProductName] = useState(\"\");\n//   const [basePrice, setBasePrice] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const { web3 } = useWeb3();\n\n//   const createProduct = async () => {\n//     try {\n//       if (!web3) {\n//         setError(\"Web3 not initialized\");\n//         return;\n//       }\n//       await contract.methods\n//         .createProduct(\n//           productName,\n//           web3.utils.toWei(basePrice, 'ether')\n//         )\n//         .send({ from: account });\n      \n//       setProductName(\"\");\n//       setBasePrice(\"\");\n//       await fetchProducts();\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   const fetchProducts = async () => {\n//     try {\n//       if (!contract || !web3) {\n//         console.error(\"Contract or web3 not initialized\");\n//         return;\n//       }\n\n//       const count = await contract.methods.productCount().call();\n//       const fetchedProducts = [];\n      \n//       for (let i = 1; i <= count; i++) {\n//         try {\n//           // Call each method separately and access the returned object properties\n//           const basicInfo = await contract.methods.getProductBasicInfo(i).call();\n//           const fees = await contract.methods.getProductFees(i).call();\n//           const actors = await contract.methods.getProductActors(i).call();\n          \n//           if (basicInfo.isValid && actors.farmer.toLowerCase() === account.toLowerCase()) {\n//             fetchedProducts.push({\n//               id: basicInfo.id,\n//               name: basicInfo.name,\n//               price: web3.utils.fromWei(basicInfo.basePrice, 'ether'),\n//               state: basicInfo.state,\n//               collectorFee: web3.utils.fromWei(fees.collectorFee, 'ether'),\n//               transporterFee: web3.utils.fromWei(fees.transporterFee, 'ether'),\n//               distributorFee: web3.utils.fromWei(fees.distributorFee, 'ether'),\n//               retailerFee: web3.utils.fromWei(fees.retailerFee, 'ether')\n//             });\n//           }\n//         } catch (err) {\n//           console.error(`Error fetching product ${i}:`, err);\n//           continue;\n//         }\n//       }\n      \n//       setProducts(fetchedProducts);\n//     } catch (error) {\n//       console.error(\"Error fetching products:\", error);\n//       setError(\"Failed to fetch products. Please try again.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (contract && account) {\n//       fetchProducts();\n//     }\n//   }, [contract, account]);\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <Card>\n//         <CardHeader>\n//           <CardTitle className=\"flex items-center gap-2\">\n//             <Wheat className=\"w-5 h-5\" />\n//             Create New Product\n//           </CardTitle>\n//         </CardHeader>\n//         <CardContent className=\"space-y-4\">\n//           {error && (\n//             <Alert variant=\"destructive\">\n//               <AlertDescription>{error}</AlertDescription>\n//             </Alert>\n//           )}\n//           <Input\n//             placeholder=\"Product Name\"\n//             value={productName}\n//             onChange={(e) => setProductName(e.target.value)}\n//           />\n//           <Input\n//             placeholder=\"Base Price (ETH)\"\n//             type=\"number\"\n//             value={basePrice}\n//             onChange={(e) => setBasePrice(e.target.value)}\n//           />\n//           <Button \n//             onClick={createProduct} \n//             className=\"w-full\"\n//             disabled={!productName || !basePrice}\n//           >\n//             Create Product\n//           </Button>\n//         </CardContent>\n//       </Card>\n\n//       <Card>\n//         <CardHeader>\n//           <CardTitle>My Products</CardTitle>\n//         </CardHeader>\n//         <CardContent>\n//           <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//             {products.length === 0 ? (\n//               <p className=\"text-gray-500 col-span-2 text-center py-4\">\n//                 No products found. Create your first product above.\n//               </p>\n//             ) : (\n//               products.map((product) => (\n//                 <ProductCard key={product.id} product={product} />\n//               ))\n//             )}\n//           </div>\n//         </CardContent>\n//       </Card>\n//     </div>\n//   );\n// };\n\n// const CollectorDashboard = ({ contract, account }) => {\n//   const [productId, setProductId] = useState(\"\");\n//   const [collectorFee, setCollectorFee] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [product, setProduct] = useState(null);\n//   const [products, setProducts] = useState([]);\n//   const { web3 } = useWeb3();\n// const [loading, setLoading] = useState(false);\n\n//   const fetchProduct = async (id) => {\n//     try {\n//       setLoading(true);\n//       setError(\"\");\n      \n//       console.log(\"Fetching product:\", id);\n//       const productInfo = await contract.methods.getProductBasicInfo(id).call();\n//       console.log(\"Product info:\", productInfo);\n      \n//       // Convert state to number for comparison\n//       const productState = Number(productInfo.state);\n//       console.log(\"Product state:\", productState);\n\n//       if (!productInfo.isValid) {\n//         setError(\"Product does not exist\");\n//         setProduct(null);\n//         return;\n//       }\n\n//       if (productState !== 0) { // CREATED state = 0\n//         setError(\"Product not in CREATED state\");\n//         setProduct(null);\n//         return;\n//       }\n\n//       setProduct({\n//         id: productInfo.id,\n//         name: productInfo.name,\n//         basePrice: web3.utils.fromWei(productInfo.basePrice, 'ether'),\n//         state: productState\n//       });\n//       setError(\"\");\n//     } catch (error) {\n//       console.error(\"Error fetching product:\", error);\n//       setError(\"Error fetching product details\");\n//       setProduct(null);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const collectProduct = async () => {\n//     try {\n//       if (!product) {\n//         setError(\"Please fetch product details first\");\n//         return;\n//       }\n\n//       const collectorFeeWei = web3.utils.toWei(collectorFee, 'ether');\n//       const basePriceWei = web3.utils.toWei(product.basePrice, 'ether');\n      \n//       await contract.methods.collectProduct(productId, collectorFeeWei).send({ \n//         from: account,\n//         value: basePriceWei\n//       });\n      \n//       setProductId(\"\");\n//       setCollectorFee(\"\");\n//       setProduct(null);\n//       setError(\"\");\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n  \n\n//   return (\n//     <div className=\"space-y-6\">\n//       <Card>\n//         <CardHeader>\n//           <CardTitle className=\"flex items-center gap-2\">\n//             <Box className=\"w-5 h-5\" />\n//             Collect Products\n//           </CardTitle>\n//         </CardHeader>\n//         <CardContent className=\"space-y-4\">\n//           {error && (\n//             <Alert variant=\"destructive\">\n//               <AlertDescription>{error}</AlertDescription>\n//             </Alert>\n//           )}\n//           <div className=\"flex gap-4\">\n//             <Input\n//               placeholder=\"Product ID\"\n//               value={productId}\n//               onChange={(e) => setProductId(e.target.value)}\n//             />\n//             <Button onClick={() => fetchProduct(productId)}>\n//               Fetch Details\n//             </Button>\n//           </div>\n          \n//           {product && (\n//             <>\n//               <div className=\"p-4 border rounded-md bg-gray-50\">\n//                 <p><strong>Name:</strong> {product.name}</p>\n//                 <p><strong>Base Price:</strong> {product.basePrice} ETH</p>\n//                 <p><strong>State:</strong> {['Created', 'Collected', 'In Transit', 'With Distributor', 'With Retailer', 'Sold'][product.state]}</p>\n//               </div>\n              \n//               <Input\n//                 placeholder=\"Your Collection Fee (ETH)\"\n//                 type=\"number\"\n//                 value={collectorFee}\n//                 onChange={(e) => setCollectorFee(e.target.value)}\n//               />\n//             </>\n//           )}\n          \n//           <Button \n//             onClick={collectProduct} \n//             className=\"w-full\"\n//             disabled={!product || !collectorFee}\n//           >\n//             Collect and Pay\n//           </Button>\n//         </CardContent>\n//       </Card>\n//     </div>\n//   );\n// };\n\n// const TransporterDashboard = ({ contract, account }) => {\n//   const [productId, setProductId] = useState(\"\");\n//   const [transporterFee, setTransporterFee] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [product, setProduct] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const { web3 } = useWeb3();\n\n//   const fetchProduct = async (id) => {\n//     try {\n//       setLoading(true);\n//       setError(\"\");\n      \n//       console.log(\"Fetching product:\", id);\n//       const productInfo = await contract.methods.getProductBasicInfo(id).call();\n//       console.log(\"Product info:\", productInfo);\n      \n//       // Convert state to number for comparison\n//       const productState = Number(productInfo.state);\n//       console.log(\"Product state:\", productState);\n\n//       if (!productInfo.isValid) {\n//         setError(\"Product does not exist\");\n//         setProduct(null);\n//         return;\n//       }\n\n//       // Check for COLLECTED state (1)\n//       if (productState !== 1) {\n//         setError(\"Product not available for transport - must be in COLLECTED state\");\n//         setProduct(null);\n//         return;\n//       }\n\n//       // Get collector fee that needs to be paid\n//       const fees = await contract.methods.getProductFees(id).call();\n//       console.log(\"Product fees:\", fees);\n\n//       setProduct({\n//         id: productInfo.id,\n//         name: productInfo.name,\n//         collectorFee: web3.utils.fromWei(fees.collectorFee, 'ether'),\n//         state: productState\n//       });\n//       setError(\"\");\n//     } catch (error) {\n//       console.error(\"Error fetching product:\", error);\n//       setError(\"Error fetching product details\");\n//       setProduct(null);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const transportProduct = async () => {\n//     try {\n//       if (!product) {\n//         setError(\"Please fetch product details first\");\n//         return;\n//       }\n\n//       const transporterFeeWei = web3.utils.toWei(transporterFee, 'ether');\n//       const collectorFeeWei = web3.utils.toWei(product.collectorFee, 'ether');\n      \n//       await contract.methods.transportProduct(productId, transporterFeeWei).send({ \n//         from: account,\n//         value: collectorFeeWei\n//       });\n      \n//       setProductId(\"\");\n//       setTransporterFee(\"\");\n//       setProduct(null);\n//       setError(\"\");\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <Card>\n//         <CardHeader>\n//           <CardTitle className=\"flex items-center gap-2\">\n//             <Truck className=\"w-5 h-5\" />\n//             Transport Products\n//           </CardTitle>\n//         </CardHeader>\n//         <CardContent className=\"space-y-4\">\n//           {error && (\n//             <Alert variant=\"destructive\">\n//               <AlertDescription>{error}</AlertDescription>\n//             </Alert>\n//           )}\n//           <div className=\"flex gap-4\">\n//             <Input\n//               placeholder=\"Product ID\"\n//               value={productId}\n//               onChange={(e) => setProductId(e.target.value)}\n//             />\n//             <Button onClick={() => fetchProduct(productId)}>\n//               Fetch Details\n//             </Button>\n//           </div>\n          \n//           {product && (\n//             <>\n//               <div className=\"p-4 border rounded-md bg-gray-50\">\n//                 <p><strong>Name:</strong> {product.name}</p>\n//                 <p><strong>Collector Fee to Pay:</strong> {product.collectorFee} ETH</p>\n//                 <p><strong>State:</strong> {['Created', 'Collected', 'In Transit', 'With Distributor', 'With Retailer', 'Sold'][product.state]}</p>\n//               </div>\n              \n//               <Input\n//                 placeholder=\"Your Transport Fee (ETH)\"\n//                 type=\"number\"\n//                 value={transporterFee}\n//                 onChange={(e) => setTransporterFee(e.target.value)}\n//               />\n//             </>\n//           )}\n          \n//           <Button \n//             onClick={transportProduct} \n//             className=\"w-full\"\n//             disabled={!product || !transporterFee}\n//           >\n//             Transport and Pay\n//           </Button>\n//         </CardContent>\n//       </Card>\n//     </div>\n//   );\n// };\n\n\n// const DistributorDashboard = ({ contract, account }) => {\n//   const [productId, setProductId] = useState(\"\");\n//   const [distributorFee, setDistributorFee] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [product, setProduct] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const { web3 } = useWeb3();\n\n//   const fetchProduct = async (id) => {\n//     try {\n//       setLoading(true);\n//       setError(\"\");\n      \n//       console.log(\"Fetching product:\", id);\n//       const productInfo = await contract.methods.getProductBasicInfo(id).call();\n//       console.log(\"Product info:\", productInfo);\n      \n//       // Convert state to number for comparison\n//       const productState = Number(productInfo.state);\n//       console.log(\"Product state:\", productState);\n\n//       if (!productInfo.isValid) {\n//         setError(\"Product does not exist\");\n//         setProduct(null);\n//         return;\n//       }\n\n//       // Check for IN_TRANSIT state (2)\n//       if (productState !== 2) {\n//         setError(\"Product not available for distribution - must be in IN_TRANSIT state\");\n//         setProduct(null);\n//         return;\n//       }\n\n//       const fees = await contract.methods.getProductFees(id).call();\n//       console.log(\"Product fees:\", fees);\n      \n//       setProduct({\n//         id: productInfo.id,\n//         name: productInfo.name,\n//         state: productState,\n//         transporterFee: web3.utils.fromWei(fees.transporterFee, 'ether')\n//       });\n//       setError(\"\");\n//     } catch (error) {\n//       console.error(\"Error fetching product:\", error);\n//       setError(\"Error fetching product details\");\n//       setProduct(null);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const distributeProduct = async () => {\n//     try {\n//       if (!product) {\n//         setError(\"Please fetch product details first\");\n//         return;\n//       }\n\n//       const distributorFeeWei = web3.utils.toWei(distributorFee, 'ether');\n//       const transporterFeeWei = web3.utils.toWei(product.transporterFee, 'ether');\n      \n//       await contract.methods.distributeProduct(productId, distributorFeeWei).send({ \n//         from: account,\n//         value: transporterFeeWei\n//       });\n      \n//       setProductId(\"\");\n//       setDistributorFee(\"\");\n//       setProduct(null);\n//       setError(\"\");\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <Card>\n//         <CardHeader>\n//           <CardTitle className=\"flex items-center gap-2\">\n//             <Store className=\"w-5 h-5\" />\n//             Distribute Products\n//           </CardTitle>\n//         </CardHeader>\n//         <CardContent className=\"space-y-4\">\n//           {error && (\n//             <Alert variant=\"destructive\">\n//               <AlertDescription>{error}</AlertDescription>\n//             </Alert>\n//           )}\n//           <div className=\"flex gap-4\">\n//             <Input\n//               placeholder=\"Product ID\"\n//               value={productId}\n//               onChange={(e) => setProductId(e.target.value)}\n//             />\n//             <Button onClick={() => fetchProduct(productId)}>\n//               Fetch Details\n//             </Button>\n//           </div>\n          \n//           {product && (\n//             <>\n//               <div className=\"p-4 border rounded-md bg-gray-50\">\n//                 <p><strong>Name:</strong> {product.name}</p>\n//                 <p><strong>Transporter Fee to Pay:</strong> {product.transporterFee} ETH</p>\n//                 <p><strong>State:</strong> {['Created', 'Collected', 'In Transit', 'With Distributor', 'With Retailer', 'Sold'][product.state]}</p>\n//               </div>\n              \n//               <Input\n//                 placeholder=\"Your Distribution Fee (ETH)\"\n//                 type=\"number\"\n//                 value={distributorFee}\n//                 onChange={(e) => setDistributorFee(e.target.value)}\n//               />\n//             </>\n//           )}\n          \n//           <Button \n//             onClick={distributeProduct} \n//             className=\"w-full\"\n//             disabled={!product || !distributorFee}\n//           >\n//             Distribute and Pay\n//           </Button>\n//         </CardContent>\n//       </Card>\n//     </div>\n//   );\n// };\n\n\n\n// const RetailerDashboard = ({ contract, account }) => {\n//   const [productId, setProductId] = useState(\"\");\n//   const [retailerFee, setRetailerFee] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [product, setProduct] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const { web3 } = useWeb3();\n\n//   // const fetchProduct = async (id) => {\n//   //   try {\n//   //     const productInfo = await contract.methods.getProductBasicInfo(id).call();\n      \n//   //     if (!productInfo.isValid || productInfo.state !== '3') {\n//   //       setError(\"Product not available for retail\");\n//   //       setProduct(null);\n//   //       return;\n//   //     }\n\n//   //     const fees = await contract.methods.getProductFees(id).call();\n      \n//   //     setProduct({\n//   //       id: productInfo.id,\n//   //       name: productInfo.name,\n//   //       state: productInfo.state,\n//   //       distributorFee: web3.utils.fromWei(fees.distributorFee, 'ether')\n//   //     });\n//   //     setError(\"\");\n//   //   } catch (error) {\n//   //     setError(\"Error fetching product details\");\n//   //     setProduct(null);\n//   //   }\n//   // };\n//   const fetchProduct = async (id) => {\n//     try {\n//       setLoading(true);\n//       setError(\"\");\n      \n//       console.log(\"Fetching product:\", id);\n//       const productInfo = await contract.methods.getProductBasicInfo(id).call();\n//       console.log(\"Product info:\", productInfo);\n      \n//       // Convert state to number for comparison\n//       const productState = Number(productInfo.state);\n//       console.log(\"Product state:\", productState);\n\n//       if (!productInfo.isValid) {\n//         setError(\"Product does not exist\");\n//         setProduct(null);\n//         return;\n//       }\n\n//       // Check for WITH_DISTRIBUTOR state (3)\n//       if (productState !== 3) {\n//         setError(\"Product not available for retail - must be with distributor\");\n//         setProduct(null);\n//         return;\n//       }\n\n//       const fees = await contract.methods.getProductFees(id).call();\n//       console.log(\"Product fees:\", fees);\n      \n//       setProduct({\n//         id: productInfo.id,\n//         name: productInfo.name,\n//         state: productState,\n//         distributorFee: web3.utils.fromWei(fees.distributorFee, 'ether')\n//       });\n//       setError(\"\");\n//     } catch (error) {\n//       console.error(\"Error fetching product:\", error);\n//       setError(\"Error fetching product details\");\n//       setProduct(null);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const sendToRetail = async () => {\n//     try {\n//       if (!product) {\n//         setError(\"Please fetch product details first\");\n//         return;\n//       }\n\n//       const retailerFeeWei = web3.utils.toWei(retailerFee, 'ether');\n//       const distributorFeeWei = web3.utils.toWei(product.distributorFee, 'ether');\n      \n//       await contract.methods.sendToRetailer(productId, retailerFeeWei).send({ \n//         from: account,\n//         value: distributorFeeWei\n//       });\n      \n//       setProductId(\"\");\n//       setRetailerFee(\"\");\n//       setProduct(null);\n//       setError(\"\");\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <Card>\n//         <CardHeader>\n//           <CardTitle className=\"flex items-center gap-2\">\n//             <ShoppingBag className=\"w-5 h-5\" />\n//             Retail Products\n//           </CardTitle>\n//         </CardHeader>\n//         <CardContent className=\"space-y-4\">\n//           {error && (\n//             <Alert variant=\"destructive\">\n//               <AlertDescription>{error}</AlertDescription>\n//             </Alert>\n//           )}\n//           <div className=\"flex gap-4\">\n//             <Input\n//               placeholder=\"Product ID\"\n//               value={productId}\n//               onChange={(e) => setProductId(e.target.value)}\n//             />\n//             <Button onClick={() => fetchProduct(productId)}>\n//               Fetch Details\n//             </Button>\n//           </div>\n          \n//           {product && (\n//             <>\n//               <div className=\"p-4 border rounded-md bg-gray-50\">\n//                 <p><strong>Name:</strong> {product.name}</p>\n//                 <p><strong>Distributor Fee to Pay:</strong> {product.distributorFee} ETH</p>\n//                 <p><strong>State:</strong> {['Created', 'Collected', 'In Transit', 'With Distributor', 'With Retailer', 'Sold'][product.state]}</p>\n//               </div>\n              \n//               <Input\n//                 placeholder=\"Your Retail Fee (ETH)\"\n//                 type=\"number\"\n//                 value={retailerFee}\n//                 onChange={(e) => setRetailerFee(e.target.value)}\n//               />\n//             </>\n//           )}\n          \n//           <Button \n//             onClick={sendToRetail} \n//             className=\"w-full\"\n//             disabled={!product || !retailerFee}\n//           >\n//             Accept and Pay\n//           </Button>\n//         </CardContent>\n//       </Card>\n//     </div>\n//   );\n// };\n\n\n// const TransactionHistory = ({ contract, account }) => {\n//   const [transactions, setTransactions] = useState([]);\n\n//   useEffect(() => {\n//     const fetchTransactionHistory = async () => {\n//       try {\n//         // Get past events\n//         const events = await contract.getPastEvents('ProductStateChanged', {\n//           fromBlock: 0,\n//           toBlock: 'latest'\n//         });\n//         setTransactions(events);\n//       } catch (error) {\n//         console.error(\"Error fetching transaction history:\", error);\n//       }\n//     };\n\n//     fetchTransactionHistory();\n//   }, [contract]);\n\n//   return (\n//     <Card>\n//       <CardHeader>\n//         <CardTitle className=\"flex items-center gap-2\">\n//           <History className=\"w-5 h-5\" />\n//           Transaction History\n//         </CardTitle>\n//       </CardHeader>\n//       <CardContent>\n//         <div className=\"space-y-4\">\n//           {transactions.map((tx, index) => (\n//             <Card key={index}>\n//               <CardContent className=\"p-4\">\n//                 <p className=\"font-semibold\">Product ID: {tx.returnValues.productId}</p>\n//                 <p className=\"text-sm text-gray-500\">New State: {tx.returnValues.newState}</p>\n//                 <p className=\"text-xs text-gray-400\">Transaction: {tx.transactionHash}</p>\n//               </CardContent>\n//             </Card>\n//           ))}\n//         </div>\n//       </CardContent>\n//     </Card>\n//   );\n// };\n\n// const DashboardLayout = ({ children, userRole, onDisconnect }) => {\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       <nav className=\"bg-white shadow-sm\">\n//         <div className=\"container mx-auto px-4 py-3\">\n//           <div className=\"flex justify-between items-center\">\n//             <div className=\"flex items-center space-x-4\">\n//               <Wheat className=\"w-6 h-6\" />\n//               <h1 className=\"text-xl font-bold\">AgriSupplyChain</h1>\n//             </div>\n//             <div className=\"flex items-center gap-4\">\n//               <Badge className=\"bg-green-100 text-green-800\">\n//                 Role: {userRole}\n//               </Badge>\n//               <Button \n//                 variant=\"outline\" \n//                 className=\"flex items-center gap-2\"\n//                 onClick={onDisconnect}\n//               >\n//                 <LogOut className=\"w-4 h-4\" />\n//                 Disconnect\n//               </Button>\n//             </div>\n//           </div>\n//         </div>\n//       </nav>\n//       <main className=\"container mx-auto px-4 py-8\">\n//         {children}\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default function Home() {\n//   const { connect, disconnect, account, isActive, contract, error } = useWeb3();\n//   const [connectionStatus, setConnectionStatus] = useState(\"\");\n//   const [userRole, setUserRole] = useState(null);\n//   const [showRegistration, setShowRegistration] = useState(false);\n//   const [registrationComplete, setRegistrationComplete] = useState(false);\n\n//   const handleConnection = async () => {\n//     try {\n//       setConnectionStatus(\"Connecting...\");\n//       if (window.ethereum) {\n//         await window.ethereum.request({\n//           method: 'eth_requestAccounts'\n//         });\n//         await connect();\n//         // After successful connection, immediately show registration\n//         setShowRegistration(true);\n//       } else {\n//         setConnectionStatus(\"Please install MetaMask!\");\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       setConnectionStatus(err.message || \"Failed to connect\");\n//     }\n//   };\n\n//   // Effect to check user role whenever registration might have completed\n//   useEffect(() => {\n//     const checkUserRole = async () => {\n//       if (isActive && account && contract) {\n//         try {\n//           const role = await contract.methods.userRoles(account).call();\n//           if (role && role !== \"\") {\n//             setUserRole(role);\n//             setShowRegistration(false);\n//             setRegistrationComplete(true);\n//           }\n//         } catch (err) {\n//           console.error(\"Error checking role:\", err);\n//         }\n//       }\n//     };\n\n//     checkUserRole();\n//   }, [isActive, account, contract, registrationComplete]);\n\n//   // Check for MetaMask on component mount\n//   useEffect(() => {\n//     if (!window.ethereum) {\n//       setConnectionStatus(\"MetaMask is not installed. Please install MetaMask to use this application.\");\n//     }\n//   }, []);\n\n//   const renderDashboard = () => {\n//     switch (userRole) {\n//       case \"FARMER\":\n//         return <FarmerDashboard contract={contract} account={account} />;\n//       case \"COLLECTOR\":\n//         return <CollectorDashboard contract={contract} account={account} />;\n//       case \"TRANSPORTER\":\n//         return <TransporterDashboard contract={contract} account={account} />;\n//       case \"DISTRIBUTOR\":\n//         return <DistributorDashboard contract={contract} account={account} />;\n//       case \"RETAILER\":\n//         return <RetailerDashboard contract={contract} account={account} />;\n//       default:\n//         return (\n//           <Card>\n//             <CardContent>\n//               <p className=\"text-center text-gray-500\">Unknown role or role not assigned</p>\n//             </CardContent>\n//           </Card>\n//         );\n//     }\n//   };\n\n//   if (!isActive) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n//         <Card className=\"w-full max-w-md\">\n//           <CardHeader>\n//             <CardTitle className=\"flex items-center gap-2\">\n//               <Wheat className=\"w-6 h-6\" />\n//               Welcome to AgriSupplyChain\n//             </CardTitle>\n//           </CardHeader>\n//           <CardContent>\n//             {connectionStatus && (\n//               <Alert className=\"mb-4\">\n//                 <AlertDescription>{connectionStatus}</AlertDescription>\n//               </Alert>\n//             )}\n//             {error && (\n//               <Alert className=\"mb-4\" variant=\"destructive\">\n//                 <AlertDescription>{error}</AlertDescription>\n//               </Alert>\n//             )}\n//             <Button\n//               onClick={handleConnection}\n//               className=\"w-full\"\n//             >\n//               Connect with MetaMask\n//             </Button>\n//           </CardContent>\n//         </Card>\n//       </div>\n//     );\n//   }\n\n//   if (showRegistration) {\n//     return (\n//       <div className=\"container mx-auto p-4\">\n//         <UserRegistration\n//           contract={contract} \n//           account={account} \n//         />\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       <nav className=\"bg-white shadow-sm\">\n//         <div className=\"container mx-auto px-4 py-3\">\n//           <div className=\"flex justify-between items-center\">\n//             <div className=\"flex items-center space-x-4\">\n//               <Wheat className=\"w-6 h-6\" />\n//               <h1 className=\"text-xl font-bold\">AgriSupplyChain</h1>\n//             </div>\n//             <div className=\"flex items-center gap-4\">\n//               <Badge className=\"bg-green-100 text-green-800\">\n//                 Role: {userRole}\n//               </Badge>\n//               <Button \n//                 variant=\"outline\" \n//                 className=\"flex items-center gap-2\"\n//                 onClick={disconnect}\n//               >\n//                 <LogOut className=\"w-4 h-4\" />\n//                 Disconnect\n//               </Button>\n//             </div>\n//           </div>\n//         </div>\n//       </nav>\n//       <main className=\"container mx-auto px-4 py-8\">\n//         <h2>Welcome, {userRole}!</h2>\n//         <div className=\"mt-6\">\n//           <Tabs defaultValue=\"dashboard\" className=\"space-y-6\">\n//             <TabsList className=\"grid w-full grid-cols-2\">\n//               <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n//               <TabsTrigger value=\"history\">Transaction History</TabsTrigger>\n//             </TabsList>\n            \n//             <TabsContent value=\"dashboard\">\n//               {renderDashboard()}\n//             </TabsContent>\n            \n//             <TabsContent value=\"history\">\n//               <TransactionHistory \n//                 contract={contract} \n//                 account={account}\n//               />\n//             </TabsContent>\n//           </Tabs>\n//         </div>\n//       </main>\n//     </div>\n//   );\n// }\n\n\n\n\n\"use client\"\nimport React, { useState, useEffect } from 'react';\nimport { useWeb3 } from \"@/contexts/web3Context\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  History, \n  User,\n  Wheat,\n  Box,\n  Truck,\n  Store,\n  ShoppingBag,\n  LogOut,\n} from \"lucide-react\";\nimport UserRegistration from './registration/page';\n\nconst ProductCard = ({ product }) => {\n  const stateColors = {\n    Created: \"bg-blue-100 text-blue-800\",\n    CollectedByCollector: \"bg-purple-100 text-purple-800\",\n    WithTransporter: \"bg-yellow-100 text-yellow-800\",\n    WithDistributor: \"bg-green-100 text-green-800\",\n    WithRetailer: \"bg-pink-100 text-pink-800\",\n    Sold: \"bg-gray-100 text-gray-800\"\n  };\n\n  return (\n    <Card>\n      <CardContent className=\"p-4\">\n        <div className=\"flex justify-between items-start mb-2\">\n          <h3 className=\"font-semibold\">{product.name}</h3>\n          <Badge className={stateColors[product.state]}>\n            {product.state}\n          </Badge>\n        </div>\n        <p className=\"text-sm text-gray-500\">ID: {product.id}</p>\n        <p className=\"text-sm text-gray-500\">Price: {product.price} ETH</p>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst ProductList = ({ products, onSelect, selectedId, stateLabel }) => {\n  if (!products.length) {\n    return (\n      <div className=\"text-center p-4 bg-gray-50 rounded-md\">\n        <p className=\"text-gray-500\">No products available</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n      {products.map((product) => (\n        <Card \n          key={product.id}\n          className={`cursor-pointer transition-all ${\n            selectedId === product.id ? 'ring-2 ring-primary' : ''\n          }`}\n          onClick={() => onSelect(product.id)}\n        >\n          <CardContent className=\"p-4\">\n            <div className=\"flex justify-between items-start mb-2\">\n              <h3 className=\"font-semibold\">{product.name}</h3>\n              <Badge className=\"bg-blue-100 text-blue-800\">\n                {stateLabel}\n              </Badge>\n            </div>\n            <p className=\"text-sm text-gray-500\">ID: {product.id}</p>\n            {product.basePrice && (\n              <p className=\"text-sm text-gray-500\">Base Price: {product.basePrice} ETH</p>\n            )}\n            {product.collectorFee && (\n              <p className=\"text-sm text-gray-500\">Collector Fee: {product.collectorFee} ETH</p>\n            )}\n            {product.transporterFee && (\n              <p className=\"text-sm text-gray-500\">Transporter Fee: {product.transporterFee} ETH</p>\n            )}\n            {product.distributorFee && (\n              <p className=\"text-sm text-gray-500\">Distributor Fee: {product.distributorFee} ETH</p>\n            )}\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\n\nconst FarmerDashboard = ({ contract, account }) => {\n  const [products, setProducts] = useState([]);\n  const [productName, setProductName] = useState(\"\");\n  const [basePrice, setBasePrice] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const { web3 } = useWeb3();\n\n  const createProduct = async () => {\n    try {\n      if (!web3) {\n        setError(\"Web3 not initialized\");\n        return;\n      }\n      await contract.methods\n        .createProduct(\n          productName,\n          web3.utils.toWei(basePrice, 'ether')\n        )\n        .send({ from: account });\n      \n      setProductName(\"\");\n      setBasePrice(\"\");\n      await fetchProducts();\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const fetchProducts = async () => {\n    try {\n      if (!contract || !web3) {\n        console.error(\"Contract or web3 not initialized\");\n        return;\n      }\n\n      const count = await contract.methods.productCount().call();\n      const fetchedProducts = [];\n      \n      for (let i = 1; i <= count; i++) {\n        try {\n          // Call each method separately and access the returned object properties\n          const basicInfo = await contract.methods.getProductBasicInfo(i).call();\n          const fees = await contract.methods.getProductFees(i).call();\n          const actors = await contract.methods.getProductActors(i).call();\n          \n          if (basicInfo.isValid && actors.farmer.toLowerCase() === account.toLowerCase()) {\n            fetchedProducts.push({\n              id: basicInfo.id,\n              name: basicInfo.name,\n              price: web3.utils.fromWei(basicInfo.basePrice, 'ether'),\n              state: basicInfo.state,\n              collectorFee: web3.utils.fromWei(fees.collectorFee, 'ether'),\n              transporterFee: web3.utils.fromWei(fees.transporterFee, 'ether'),\n              distributorFee: web3.utils.fromWei(fees.distributorFee, 'ether'),\n              retailerFee: web3.utils.fromWei(fees.retailerFee, 'ether')\n            });\n          }\n        } catch (err) {\n          console.error(`Error fetching product ${i}:`, err);\n          continue;\n        }\n      }\n      \n      setProducts(fetchedProducts);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n      setError(\"Failed to fetch products. Please try again.\");\n    }\n  };\n\n  useEffect(() => {\n    if (contract && account) {\n      fetchProducts();\n    }\n  }, [contract, account]);\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Wheat className=\"w-5 h-5\" />\n            Create New Product\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n          <Input\n            placeholder=\"Product Name\"\n            value={productName}\n            onChange={(e) => setProductName(e.target.value)}\n          />\n          <Input\n            placeholder=\"Base Price (ETH)\"\n            type=\"number\"\n            value={basePrice}\n            onChange={(e) => setBasePrice(e.target.value)}\n          />\n          <Button \n            onClick={createProduct} \n            className=\"w-full\"\n            disabled={!productName || !basePrice}\n          >\n            Create Product\n          </Button>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>My Products</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {products.length === 0 ? (\n              <p className=\"text-gray-500 col-span-2 text-center py-4\">\n                No products found. Create your first product above.\n              </p>\n            ) : (\n              products.map((product) => (\n                <ProductCard key={product.id} product={product} />\n              ))\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nconst CollectorDashboard = ({ contract, account }) => {\n  const [availableProducts, setAvailableProducts] = useState([]);\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  const [collectorFee, setCollectorFee] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { web3 } = useWeb3();\n\n  const fetchAvailableProducts = async () => {\n    try {\n      setLoading(true);\n      const count = await contract.methods.productCount().call();\n      const products = [];\n\n      for (let i = 1; i <= count; i++) {\n        const productInfo = await contract.methods.getProductBasicInfo(i).call();\n        if (productInfo.isValid && Number(productInfo.state) === 0) {\n          products.push({\n            id: productInfo.id,\n            name: productInfo.name,\n            basePrice: web3.utils.fromWei(productInfo.basePrice, 'ether'),\n            state: productInfo.state\n          });\n        }\n      }\n\n      setAvailableProducts(products);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n      setError(\"Failed to fetch available products\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (contract && account) {\n      fetchAvailableProducts();\n    }\n  }, [contract, account]);\n\n  const collectProduct = async () => {\n    try {\n      if (!selectedProductId) {\n        setError(\"Please select a product first\");\n        return;\n      }\n\n      const product = availableProducts.find(p => p.id === selectedProductId);\n      const collectorFeeWei = web3.utils.toWei(collectorFee, 'ether');\n      const basePriceWei = web3.utils.toWei(product.basePrice, 'ether');\n      \n      await contract.methods.collectProduct(selectedProductId, collectorFeeWei)\n        .send({ from: account, value: basePriceWei });\n      \n      setCollectorFee(\"\");\n      setSelectedProductId(null);\n      await fetchAvailableProducts();\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Available Products for Collection</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n          \n          <ProductList\n            products={availableProducts}\n            onSelect={setSelectedProductId}\n            selectedId={selectedProductId}\n            stateLabel=\"Available\"\n          />\n          \n          {selectedProductId && (\n            <>\n              <Input\n                placeholder=\"Your Collection Fee (ETH)\"\n                type=\"number\"\n                value={collectorFee}\n                onChange={(e) => setCollectorFee(e.target.value)}\n              />\n              <Button \n                onClick={collectProduct} \n                className=\"w-full\"\n                disabled={!collectorFee}\n              >\n                Collect and Pay\n              </Button>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\n\nconst TransporterDashboard = ({ contract, account }) => {\n  const [availableProducts, setAvailableProducts] = useState([]);\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  const [transporterFee, setTransporterFee] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { web3 } = useWeb3();\n\n  const fetchAvailableProducts = async () => {\n    try {\n      setLoading(true);\n      const count = await contract.methods.productCount().call();\n      const products = [];\n\n      for (let i = 1; i <= count; i++) {\n        const productInfo = await contract.methods.getProductBasicInfo(i).call();\n        if (productInfo.isValid && Number(productInfo.state) === 1) {\n          const fees = await contract.methods.getProductFees(i).call();\n          products.push({\n            id: productInfo.id,\n            name: productInfo.name,\n            collectorFee: web3.utils.fromWei(fees.collectorFee, 'ether'),\n            state: productInfo.state\n          });\n        }\n      }\n\n      setAvailableProducts(products);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n      setError(\"Failed to fetch available products\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (contract && account) {\n      fetchAvailableProducts();\n    }\n  }, [contract, account]);\n\n  const transportProduct = async () => {\n    try {\n      if (!selectedProductId) {\n        setError(\"Please select a product first\");\n        return;\n      }\n\n      const product = availableProducts.find(p => p.id === selectedProductId);\n      const transporterFeeWei = web3.utils.toWei(transporterFee, 'ether');\n      const collectorFeeWei = web3.utils.toWei(product.collectorFee, 'ether');\n      \n      await contract.methods.transportProduct(selectedProductId, transporterFeeWei)\n        .send({ from: account, value: collectorFeeWei });\n      \n      setTransporterFee(\"\");\n      setSelectedProductId(null);\n      await fetchAvailableProducts();\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Products Ready for Transport</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n          \n          <ProductList\n            products={availableProducts}\n            onSelect={setSelectedProductId}\n            selectedId={selectedProductId}\n            stateLabel=\"Ready for Transport\"\n          />\n          \n          {selectedProductId && (\n            <>\n              <Input\n                placeholder=\"Your Transport Fee (ETH)\"\n                type=\"number\"\n                value={transporterFee}\n                onChange={(e) => setTransporterFee(e.target.value)}\n              />\n              <Button \n                onClick={transportProduct} \n                className=\"w-full\"\n                disabled={!transporterFee}\n              >\n                Transport and Pay\n              </Button>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\n\nconst DistributorDashboard = ({ contract, account }) => {\n  const [availableProducts, setAvailableProducts] = useState([]);\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  const [distributorFee, setDistributorFee] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { web3 } = useWeb3();\n\n  const fetchAvailableProducts = async () => {\n    try {\n      setLoading(true);\n      const count = await contract.methods.productCount().call();\n      const products = [];\n\n      for (let i = 1; i <= count; i++) {\n        const productInfo = await contract.methods.getProductBasicInfo(i).call();\n        if (productInfo.isValid && Number(productInfo.state) === 2) { // IN_TRANSIT state\n          const fees = await contract.methods.getProductFees(i).call();\n          products.push({\n            id: productInfo.id,\n            name: productInfo.name,\n            transporterFee: web3.utils.fromWei(fees.transporterFee, 'ether'),\n            state: productInfo.state\n          });\n        }\n      }\n\n      setAvailableProducts(products);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n      setError(\"Failed to fetch available products\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (contract && account) {\n      fetchAvailableProducts();\n    }\n  }, [contract, account]);\n\n  const distributeProduct = async () => {\n    try {\n      if (!selectedProductId) {\n        setError(\"Please select a product first\");\n        return;\n      }\n\n      const product = availableProducts.find(p => p.id === selectedProductId);\n      const distributorFeeWei = web3.utils.toWei(distributorFee, 'ether');\n      const transporterFeeWei = web3.utils.toWei(product.transporterFee, 'ether');\n      \n      await contract.methods.distributeProduct(selectedProductId, distributorFeeWei)\n        .send({ from: account, value: transporterFeeWei });\n      \n      setDistributorFee(\"\");\n      setSelectedProductId(null);\n      await fetchAvailableProducts();\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Products Ready for Distribution</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n          \n          <ProductList\n            products={availableProducts}\n            onSelect={setSelectedProductId}\n            selectedId={selectedProductId}\n            stateLabel=\"In Transit\"\n          />\n          \n          {selectedProductId && (\n            <>\n              <Input\n                placeholder=\"Your Distribution Fee (ETH)\"\n                type=\"number\"\n                value={distributorFee}\n                onChange={(e) => setDistributorFee(e.target.value)}\n              />\n              <Button \n                onClick={distributeProduct} \n                className=\"w-full\"\n                disabled={!distributorFee}\n              >\n                Distribute and Pay\n              </Button>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\n\n\nconst RetailerDashboard = ({ contract, account }) => {\n  const [availableProducts, setAvailableProducts] = useState([]);\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  const [retailerFee, setRetailerFee] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { web3 } = useWeb3();\n\n  const fetchAvailableProducts = async () => {\n    try {\n      setLoading(true);\n      const count = await contract.methods.productCount().call();\n      const products = [];\n\n      for (let i = 1; i <= count; i++) {\n        const productInfo = await contract.methods.getProductBasicInfo(i).call();\n        if (productInfo.isValid && Number(productInfo.state) === 3) { // WITH_DISTRIBUTOR state\n          const fees = await contract.methods.getProductFees(i).call();\n          products.push({\n            id: productInfo.id,\n            name: productInfo.name,\n            distributorFee: web3.utils.fromWei(fees.distributorFee, 'ether'),\n            state: productInfo.state\n          });\n        }\n      }\n\n      setAvailableProducts(products);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n      setError(\"Failed to fetch available products\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (contract && account) {\n      fetchAvailableProducts();\n    }\n  }, [contract, account]);\n\n  const sendToRetail = async () => {\n    try {\n      if (!selectedProductId) {\n        setError(\"Please select a product first\");\n        return;\n      }\n\n      const product = availableProducts.find(p => p.id === selectedProductId);\n      const retailerFeeWei = web3.utils.toWei(retailerFee, 'ether');\n      const distributorFeeWei = web3.utils.toWei(product.distributorFee, 'ether');\n      \n      await contract.methods.sendToRetailer(selectedProductId, retailerFeeWei)\n        .send({ from: account, value: distributorFeeWei });\n      \n      setRetailerFee(\"\");\n      setSelectedProductId(null);\n      await fetchAvailableProducts();\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Products Available for Retail</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n          \n          <ProductList\n            products={availableProducts}\n            onSelect={setSelectedProductId}\n            selectedId={selectedProductId}\n            stateLabel=\"With Distributor\"\n          />\n          \n          {selectedProductId && (\n            <>\n              <Input\n                placeholder=\"Your Retail Fee (ETH)\"\n                type=\"number\"\n                value={retailerFee}\n                onChange={(e) => setRetailerFee(e.target.value)}\n              />\n              <Button \n                onClick={sendToRetail} \n                className=\"w-full\"\n                disabled={!retailerFee}\n              >\n                Accept and Pay\n              </Button>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport { CollectorDashboard, TransporterDashboard, DistributorDashboard, RetailerDashboard };\n\n\nconst TransactionHistory = ({ contract, account }) => {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    const fetchTransactionHistory = async () => {\n      try {\n        // Get past events\n        const events = await contract.getPastEvents('ProductStateChanged', {\n          fromBlock: 0,\n          toBlock: 'latest'\n        });\n        setTransactions(events);\n      } catch (error) {\n        console.error(\"Error fetching transaction history:\", error);\n      }\n    };\n\n    fetchTransactionHistory();\n  }, [contract]);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <History className=\"w-5 h-5\" />\n          Transaction History\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {transactions.map((tx, index) => (\n            <Card key={index}>\n              <CardContent className=\"p-4\">\n                <p className=\"font-semibold\">Product ID: {tx.returnValues.productId}</p>\n                <p className=\"text-sm text-gray-500\">New State: {tx.returnValues.newState}</p>\n                <p className=\"text-xs text-gray-400\">Transaction: {tx.transactionHash}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst DashboardLayout = ({ children, userRole, onDisconnect }) => {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <nav className=\"bg-white shadow-sm\">\n        <div className=\"container mx-auto px-4 py-3\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center space-x-4\">\n              <Wheat className=\"w-6 h-6\" />\n              <h1 className=\"text-xl font-bold\">AgriSupplyChain</h1>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <Badge className=\"bg-green-100 text-green-800\">\n                Role: {userRole}\n              </Badge>\n              <Button \n                variant=\"outline\" \n                className=\"flex items-center gap-2\"\n                onClick={onDisconnect}\n              >\n                <LogOut className=\"w-4 h-4\" />\n                Disconnect\n              </Button>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <main className=\"container mx-auto px-4 py-8\">\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default function Home() {\n  const { connect, disconnect, account, isActive, contract, error } = useWeb3();\n  const [connectionStatus, setConnectionStatus] = useState(\"\");\n  const [userRole, setUserRole] = useState(null);\n  const [showRegistration, setShowRegistration] = useState(false);\n  const [registrationComplete, setRegistrationComplete] = useState(false);\n\n  const handleConnection = async () => {\n    try {\n      setConnectionStatus(\"Connecting...\");\n      if (window.ethereum) {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        await connect();\n        // After successful connection, immediately show registration\n        setShowRegistration(true);\n      } else {\n        setConnectionStatus(\"Please install MetaMask!\");\n      }\n    } catch (err) {\n      console.error(err);\n      setConnectionStatus(err.message || \"Failed to connect\");\n    }\n  };\n\n  // Effect to check user role whenever registration might have completed\n  useEffect(() => {\n    const checkUserRole = async () => {\n      if (isActive && account && contract) {\n        try {\n          const role = await contract.methods.userRoles(account).call();\n          if (role && role !== \"\") {\n            setUserRole(role);\n            setShowRegistration(false);\n            setRegistrationComplete(true);\n          }\n        } catch (err) {\n          console.error(\"Error checking role:\", err);\n        }\n      }\n    };\n\n    checkUserRole();\n  }, [isActive, account, contract, registrationComplete]);\n\n  // Check for MetaMask on component mount\n  useEffect(() => {\n    if (!window.ethereum) {\n      setConnectionStatus(\"MetaMask is not installed. Please install MetaMask to use this application.\");\n    }\n  }, []);\n\n  const renderDashboard = () => {\n    switch (userRole) {\n      case \"FARMER\":\n        return <FarmerDashboard contract={contract} account={account} />;\n      case \"COLLECTOR\":\n        return <CollectorDashboard contract={contract} account={account} />;\n      case \"TRANSPORTER\":\n        return <TransporterDashboard contract={contract} account={account} />;\n      case \"DISTRIBUTOR\":\n        return <DistributorDashboard contract={contract} account={account} />;\n      case \"RETAILER\":\n        return <RetailerDashboard contract={contract} account={account} />;\n      default:\n        return (\n          <Card>\n            <CardContent>\n              <p className=\"text-center text-gray-500\">Unknown role or role not assigned</p>\n            </CardContent>\n          </Card>\n        );\n    }\n  };\n\n  if (!isActive) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Wheat className=\"w-6 h-6\" />\n              Welcome to AgriSupplyChain\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {connectionStatus && (\n              <Alert className=\"mb-4\">\n                <AlertDescription>{connectionStatus}</AlertDescription>\n              </Alert>\n            )}\n            {error && (\n              <Alert className=\"mb-4\" variant=\"destructive\">\n                <AlertDescription>{error}</AlertDescription>\n              </Alert>\n            )}\n            <Button\n              onClick={handleConnection}\n              className=\"w-full\"\n            >\n              Connect with MetaMask\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (showRegistration) {\n    return (\n      <div className=\"container mx-auto p-4\">\n        <UserRegistration\n          contract={contract} \n          account={account} \n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <nav className=\"bg-white shadow-sm\">\n        <div className=\"container mx-auto px-4 py-3\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center space-x-4\">\n              <Wheat className=\"w-6 h-6\" />\n              <h1 className=\"text-xl font-bold\">AgriSupplyChain</h1>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <Badge className=\"bg-green-100 text-green-800\">\n                Role: {userRole}\n              </Badge>\n              <Button \n                variant=\"outline\" \n                className=\"flex items-center gap-2\"\n                onClick={disconnect}\n              >\n                <LogOut className=\"w-4 h-4\" />\n                Disconnect\n              </Button>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <main className=\"container mx-auto px-4 py-8\">\n        <h2>Welcome, {userRole}!</h2>\n        <div className=\"mt-6\">\n          <Tabs defaultValue=\"dashboard\" className=\"space-y-6\">\n            <TabsList className=\"grid w-full grid-cols-2\">\n              <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n              <TabsTrigger value=\"history\">Transaction History</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"dashboard\">\n              {renderDashboard()}\n            </TabsContent>\n            \n            <TabsContent value=\"history\">\n              <TransactionHistory \n                contract={contract} \n                account={account}\n              />\n            </TabsContent>\n          </Tabs>\n        </div>\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}